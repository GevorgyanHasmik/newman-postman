{
	"info": {
		"_postman_id": "e47490d3-f952-4132-960a-c15de190fe20",
		"name": "Core Banking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ATOM",
			"item": [
				{
					"name": "Client full",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client full tables",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid\",idi.clientDocuments[0].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId\",idi.clientDocuments[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid\",idi.clientDocuments[0].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority\",idi.clientDocuments[0].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate\",idi.clientDocuments[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate\",idi.clientDocuments[0].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId\",idi.clientDocuments[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate\",idi.clientDocuments[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId\",idi.clientDocuments[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser\",idi.clientDocuments[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate\",idi.clientDocuments[0].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate\",idi.clientDocuments[0].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId\",idi.clientDocuments[0].issuedCountryId);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":1,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"{{$randomFirstName}}\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\":[\r\n      {\r\n         \"addressId\":2,\r\n         \"addressTypeId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ],\r\n   \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":1,\r\n         \"documentid\":\"{{$randomInt}}{{$randomBankAccount}}{{$randomAlphaNumeric}}\",\r\n         \"issuingAuthority\":\"{{$randomFullName}}\",\r\n         \"expiredDate\":\"2050-10-10\",\r\n         \"issuedCountryId\" : 1,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ],\r\n    \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":1,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"2020-10-10\",\r\n            \"expiredDate\":\"2050-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ],\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ],\r\n \"clientEmails\":[\r\n      {\r\n         \"email\":\"{{$randomEmail}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"Ani\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n   \r\n \r\n      {\r\n         \"email\":\"{{$randomEmail}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"Ani\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      },\r\n       {\r\n         \"email\":\"{{$randomEmail}}\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"Ani\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n    \"clientPhones\":[\r\n      {\r\n         \"phone\":\"{{$randomCreditCardMask}}{{$randomCreditCardMask}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"Ani\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n      {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"Ani\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      },\r\n      {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"Ani\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											"     pm.test(\"clientAddresses id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].id).to.eql(parseInt(pm.environment.get(\"address\")));\r",
											"    });\r",
											"      pm.test(\"addressid id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    var addressId = parseInt(pm.environment.get(\"addressid\"));\r",
											"    \r",
											"    \r",
											"    pm.expect(ok.clientAddresses[0].addressId).to.eql(addressId);\r",
											"    });\r",
											"\r",
											" pm.test(\"address create day is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].createdDate).to.eql(pm.environment.get(\"addresscreateday\"));\r",
											" });\r",
											"  pm.test(\"address created by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].createdByUserId).to.eql(pm.environment.get(\"addresscreate\"));\r",
											" });\r",
											" pm.test(\"address modify  by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].modifiedByUser).to.eql(pm.environment.get(\"addressmodify\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"  pm.test(\"client doc id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].id).to.eql(parseInt(pm.environment.get(\"Docid\")));\r",
											" });\r",
											" pm.test(\"client doc type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"documentTypeId\")));\r",
											" });\r",
											"pm.test(\"client document id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentid).to.eql(pm.environment.get(\"documentid\"));\r",
											" });\r",
											" pm.test(\"client document issuing authority  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuingAuthority).to.eql(pm.environment.get(\"docissuingAuthority\"));\r",
											" });\r",
											" pm.test(\"client document  expired date is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].expiredDate).to.eql(pm.environment.get(\"docexpiredDate\"));\r",
											" });\r",
											"  pm.test(\"client document  source id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].sourceId).to.eql(parseInt(pm.environment.get(\"docsourceId\")));\r",
											" });\r",
											" pm.test(\"client document  created date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdDate).to.eql(pm.environment.get(\"doccreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client document created by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdByUserId).to.eql(pm.environment.get(\"doccreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client document modify by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].modifiedByUser).to.eql(pm.environment.get(\"docmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].beginDate).to.eql(pm.environment.get(\"docbeginDate\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].endDate).to.eql(pm.environment.get(\"docendDate\"));\r",
											" });\r",
											"pm.test(\"client documentissue dCountry Id   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuedCountryId).to.eql(parseInt(pm.environment.get(\"docissuedCountryId\")));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											" pm.test(\"client email id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].id).to.eql(parseInt(pm.environment.get(\"emailid\")));\r",
											" });\r",
											" pm.test(\"client email  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].email).to.eql(pm.environment.get(\"email\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdDate).to.eql(pm.environment.get(\"emailcreatedDate\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"  pm.test(\"client Phone id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].id).to.eql(parseInt(pm.environment.get(\"Phoneid\")));\r",
											" });\r",
											" pm.test(\"client phone  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].phone).to.eql(pm.environment.get(\"phone\"));\r",
											" });\r",
											" pm.test(\"client Phone type Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId\")));\r",
											" });\r",
											" pm.test(\"client Phone created Date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate\"));\r",
											" });\r",
											" pm.test(\"client Phone created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Phone modified By User  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].modifiedByUser).to.eql(pm.environment.get(\"PhonemodifiedByUser\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"  pm.test(\"client Sphere Of Activities id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].id).to.eql(parseInt(pm.environment.get(\"SphereOfActivitiesid\")));\r",
											" });\r",
											"   pm.test(\"client Sphere Of Activities created date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].createdDate).to.eql(pm.environment.get(\"SphereOfActivitiescreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Sphere Of Activities created by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].createdByUserId).to.eql(pm.environment.get(\"SphereOfActivitiescreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Sphere Of Activities modify by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].modifiedByUser).to.eql(pm.environment.get(\"SphereOfActivitiesmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client Sphere Of Activities begin date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].beginDate).to.eql(pm.environment.get(\"SphereOfActivitiesbeginDate\"));\r",
											" });\r",
											"\r",
											"\r",
											" \r",
											"  pm.test(\"client Document Additionals id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].id).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsid\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsiddocumentTypeId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals sourse id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].sourceId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsidsourceId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals created date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdDate).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals created by user    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdByUserId).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals issued date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].issuedDate).to.eql(pm.environment.get(\"DocumentAdditionalsidissuedDate\"));\r",
											" });\r",
											" pm.test(\"client Document Additionals expired  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].expiredDate).to.eql(pm.environment.get(\"DocumentAdditionalsidexpiredDate\"));\r",
											" });\r",
											"\r",
											"\r",
											" let firstName = 'Miguel'\r",
											" console.log(firstName);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "put full client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid\",idi.clientDocuments[0].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId\",idi.clientDocuments[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid\",idi.clientDocuments[0].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority\",idi.clientDocuments[0].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate\",idi.clientDocuments[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate\",idi.clientDocuments[0].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId\",idi.clientDocuments[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate\",idi.clientDocuments[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId\",idi.clientDocuments[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser\",idi.clientDocuments[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate\",idi.clientDocuments[0].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate\",idi.clientDocuments[0].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId\",idi.clientDocuments[0].issuedCountryId);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"middleName\": \"Maxikaaaaaaa\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdDate\": \"{{createdDate}}\",\r\n    \"modifiedByUser\": {{modifedbyuserid}},\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n   \"clientAddresses\": [\r\n        {\r\n            \"id\": {{address}},\r\n            \"clientId\": {{clientid}},\r\n            \"addressId\": {{addressid}},\r\n            \"addressTypeId\": 1,\r\n            \"createdDate\": \"{{addresscreateday}}\",\r\n            \"createdByUserId\": \"{{addresscreate}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n            \"documentTypeId\": {{documentTypeId}},\r\n            \"documentid\": \"{{documentid}}\",\r\n            \"issuingAuthority\": \"{{docissuingAuthority}}\",\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientEmails\": [\r\n        {\r\n            \"id\": {{emailid}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"{{email}}\",\r\n            \"typeId\": {{emailtypeId}},\r\n            \"createdDate\": \"{{emailcreatedDate}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientPhones\": [\r\n        {\r\n            \"id\": {{Phoneid}},\r\n            \"clientId\": {{clientid}},\r\n            \"phone\": \"{{phone}}\",\r\n            \"typeId\":{{PhonetypeId}},\r\n            \"createdDate\": \"{{PhonecreatedDate}}\",\r\n            \"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}} ,\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientSphereOfActivities\": [\r\n        {\r\n            \"id\": {{SphereOfActivitiesid}},\r\n            \"clientId\": {{clientid}},\r\n            \"sphereOfActivityId\": {{SphereOfActivities.sphereOfActivityId}},\r\n            \"createdDate\": \"{{SphereOfActivitiescreatedDate}}\",\r\n            \"createdByUserId\": \"{{SphereOfActivitiescreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"beginDate\": \"{{SphereOfActivitiesbeginDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [\r\n        {\r\n            \"id\": {{DocumentAdditionalsid}},\r\n            \"clientId\":{{clientid}},\r\n            \"documentTypeId\": {{DocumentAdditionalsiddocumentTypeId}},\r\n            \"sourceId\":{{DocumentAdditionalsidsourceId}},\r\n            \"createdDate\": \"{{DocumentAdditionalsidcreatedDate}}\",\r\n            \"createdByUserId\": \"{{DocumentAdditionalsidcreatedByUserId}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"issuedDate\":\" {{DocumentAdditionalsidissuedDate}}\",\r\n            \"expiredDate\": \"{{DocumentAdditionalsidexpiredDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true\r\n        }\r\n    ],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "put full client Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid\",idi.clientDocuments[0].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId\",idi.clientDocuments[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid\",idi.clientDocuments[0].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority\",idi.clientDocuments[0].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate\",idi.clientDocuments[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate\",idi.clientDocuments[0].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId\",idi.clientDocuments[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate\",idi.clientDocuments[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId\",idi.clientDocuments[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser\",idi.clientDocuments[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate\",idi.clientDocuments[0].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate\",idi.clientDocuments[0].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId\",idi.clientDocuments[0].issuedCountryId);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"middleName\": \"Maxikaaaaaaa\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdDate\": \"{{createdDate}}\",\r\n    \"modifiedByUser\": {{modifedbyuserid}},\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n   \"clientAddresses\": [\r\n        {\r\n            \"id\": {{address}},\r\n            \"clientId\": {{clientid}},\r\n            \"addressId\": {{addressid}},\r\n            \"addressTypeId\": 1,\r\n            \"createdDate\": \"{{addresscreateday}}\",\r\n            \"createdByUserId\": \"{{addresscreate}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n            \"documentTypeId\": {{documentTypeId}},\r\n            \"documentid\": \"{{documentid}}\",\r\n            \"issuingAuthority\": \"{{docissuingAuthority}}\",\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientEmails\": [\r\n        {\r\n            \"id\": {{emailid}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"{{email}}\",\r\n            \"typeId\": {{emailtypeId}},\r\n            \"createdDate\": \"{{emailcreatedDate}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientPhones\": [\r\n        {\r\n            \"id\": {{Phoneid}},\r\n            \"clientId\": {{clientid}},\r\n            \"phone\": \"{{phone}}\",\r\n            \"typeId\":{{PhonetypeId}},\r\n            \"createdDate\": \"{{PhonecreatedDate}}\",\r\n            \"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}} ,\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientSphereOfActivities\": [\r\n        {\r\n            \"id\": {{SphereOfActivitiesid}},\r\n            \"clientId\": {{clientid}},\r\n            \"sphereOfActivityId\": {{SphereOfActivities.sphereOfActivityId}},\r\n            \"createdDate\": \"{{SphereOfActivitiescreatedDate}}\",\r\n            \"createdByUserId\": \"{{SphereOfActivitiescreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"beginDate\": \"{{SphereOfActivitiesbeginDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [\r\n        {\r\n            \"id\": {{DocumentAdditionalsid}},\r\n            \"clientId\":{{clientid}},\r\n            \"documentTypeId\": {{DocumentAdditionalsiddocumentTypeId}},\r\n            \"sourceId\":{{DocumentAdditionalsidsourceId}},\r\n            \"createdDate\": \"{{DocumentAdditionalsidcreatedDate}}\",\r\n            \"createdByUserId\": \"{{DocumentAdditionalsidcreatedByUserId}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"issuedDate\":\" {{DocumentAdditionalsidissuedDate}}\",\r\n            \"expiredDate\": \"{{DocumentAdditionalsidexpiredDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true\r\n        }\r\n    ],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											"     pm.test(\"clientAddresses id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].id).to.eql(parseInt(pm.environment.get(\"address\")));\r",
											"    });\r",
											"      pm.test(\"addressid id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    var addressId = parseInt(pm.environment.get(\"addressid\"));\r",
											"    \r",
											"    \r",
											"    pm.expect(ok.clientAddresses[0].addressId).to.eql(addressId);\r",
											"    });\r",
											"\r",
											" pm.test(\"address create day is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].createdDate).to.eql(pm.environment.get(\"addresscreateday\"));\r",
											" });\r",
											"  pm.test(\"address created by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].createdByUserId).to.eql(pm.environment.get(\"addresscreate\"));\r",
											" });\r",
											" pm.test(\"address modify  by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].modifiedByUser).to.eql(pm.environment.get(\"addressmodify\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"  pm.test(\"client doc id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].id).to.eql(parseInt(pm.environment.get(\"Docid\")));\r",
											" });\r",
											" pm.test(\"client doc type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"documentTypeId\")));\r",
											" });\r",
											"pm.test(\"client document id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentid).to.eql(pm.environment.get(\"documentid\"));\r",
											" });\r",
											" pm.test(\"client document issuing authority  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuingAuthority).to.eql(pm.environment.get(\"docissuingAuthority\"));\r",
											" });\r",
											" pm.test(\"client document  expired date is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].expiredDate).to.eql(pm.environment.get(\"docexpiredDate\"));\r",
											" });\r",
											"  pm.test(\"client document  source id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].sourceId).to.eql(parseInt(pm.environment.get(\"docsourceId\")));\r",
											" });\r",
											" pm.test(\"client document  created date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdDate).to.eql(pm.environment.get(\"doccreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client document created by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdByUserId).to.eql(pm.environment.get(\"doccreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client document modify by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].modifiedByUser).to.eql(pm.environment.get(\"docmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].beginDate).to.eql(pm.environment.get(\"docbeginDate\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].endDate).to.eql(pm.environment.get(\"docendDate\"));\r",
											" });\r",
											"pm.test(\"client documentissue dCountry Id   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuedCountryId).to.eql(parseInt(pm.environment.get(\"docissuedCountryId\")));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											" pm.test(\"client email id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].id).to.eql(parseInt(pm.environment.get(\"emailid\")));\r",
											" });\r",
											" pm.test(\"client email  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].email).to.eql(pm.environment.get(\"email\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdDate).to.eql(pm.environment.get(\"emailcreatedDate\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"  pm.test(\"client Phone id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].id).to.eql(parseInt(pm.environment.get(\"Phoneid\")));\r",
											" });\r",
											" pm.test(\"client phone  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].phone).to.eql(pm.environment.get(\"phone\"));\r",
											" });\r",
											" pm.test(\"client Phone type Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId\")));\r",
											" });\r",
											" pm.test(\"client Phone created Date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate\"));\r",
											" });\r",
											" pm.test(\"client Phone created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Phone modified By User  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].modifiedByUser).to.eql(pm.environment.get(\"PhonemodifiedByUser\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"  pm.test(\"client Sphere Of Activities id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].id).to.eql(parseInt(pm.environment.get(\"SphereOfActivitiesid\")));\r",
											" });\r",
											"   pm.test(\"client Sphere Of Activities created date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].createdDate).to.eql(pm.environment.get(\"SphereOfActivitiescreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Sphere Of Activities created by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].createdByUserId).to.eql(pm.environment.get(\"SphereOfActivitiescreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Sphere Of Activities modify by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].modifiedByUser).to.eql(pm.environment.get(\"SphereOfActivitiesmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client Sphere Of Activities begin date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].beginDate).to.eql(pm.environment.get(\"SphereOfActivitiesbeginDate\"));\r",
											" });\r",
											"\r",
											"\r",
											" \r",
											"  pm.test(\"client Document Additionals id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].id).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsid\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsiddocumentTypeId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals sourse id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].sourceId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsidsourceId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals created date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdDate).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals created by user    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdByUserId).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals issued date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].issuedDate).to.eql(pm.environment.get(\"DocumentAdditionalsidissuedDate\"));\r",
											" });\r",
											" pm.test(\"client Document Additionals expired  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].expiredDate).to.eql(pm.environment.get(\"DocumentAdditionalsidexpiredDate\"));\r",
											" });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client base",
					"item": [
						{
							"name": "_Auth base table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client base table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get client base",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"  \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "base update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"ttee\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"isActive\": false,\r\n    \"reasonId\": 1,\r\n    \"note\":\"hvgbjh\",\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get client base",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"  \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "empty taxpayer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"empty taxpayer id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"taxpayerid is a required field while inserting a new standart client\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   //\"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "check errors",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"empty taxpayer id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"taxpayerid is a required field while inserting a new standart client\");\r",
											"});\r",
											"\r",
											"pm.test(\" empty first name and lastc name \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"First name and last name for individual client are mandatory\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"nationality id empty \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"nationality_id for individual client is mandatory\");\r",
											"});\r",
											"\r",
											"pm.test(\"empty bday\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"birth_incorp_date for client is mandatory and should be before current date or after 1900-01-01\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n//    \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n//    \"firstName\":\"{{$randomFirstName}}\",\r\n//    \"middleName\": \"{{$randomFirstName}}\",\r\n//   \"lastName\":\"{{$randomLastName}}\",\r\n//    \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n//   \"genderId\":2,\r\n  \"clientStageId\":1,\r\n//   \"clientLanguageId\":1,\r\n//   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n//   \"categoryId\":1,\r\n//   \"maritalStatusId\":2,\r\n//   \"nationalityId\":1,\r\n//    \"residentCountryId\":1,\r\n//   \"branchId\":1,\r\n//   \"createdByUserId\":\"user\", \r\n   \"isActive\":true\r\n//    \"reasonId\" : null,\r\n//    \"note\" : null, \r\n//    \"isResident\":true,\r\n//    \"isInternational\":false,\r\n//    \"isEmployee\":true,\r\n//    \"isRelated\":false,\r\n//    \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid taxpayer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid taxpayer id  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Input string\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":123a,\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid first name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"lonf first name \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"value too long for type character varying\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid middle name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"long middle name  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"long last name  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid full name type = 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaa\",\r\n   \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid client type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid client type  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"g8yh\",\r\n  \"clientTypeId\":1000,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invslid gender type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid client type  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":200,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid stage type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid client type  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1000,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid language id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid client type  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1000,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n}\r\n ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid bday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid bday  \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"birth_incorp_date for client is mandatory and should be before current date or after 1900-01-01.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"18{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n   \r\n   }\r\n  ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid category id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid category id   \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1000,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid marital status id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid marital status   \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":200,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid nationality id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid nationality id   \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1000,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid resident country id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid resident country id   \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":150,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid branch id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid branch id    \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":100,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid full name type =2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid full name \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"value too long for type character varying(255)\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n  // \"firstName\":\"{{$randomFirstName}}\",\r\n  // \"middleName\": \"{{$randomFirstName}}\",\r\n // \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n   \"clientTypeId\":2,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n      \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"aaa\",\r\n   \"firstName\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  // \"middleName\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n  \"lastName\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n //  \"fullName\":\"aaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n   \"clientTypeId\":1,\r\n  \"genderId\":200,\r\n  \"clientStageId\":100,\r\n  \"clientLanguageId\":100,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":10,\r\n  \"maritalStatusId\":200,\r\n  \"nationalityId\":100,\r\n   \"residentCountryId\":100,\r\n  \"branchId\":100,\r\n  \"createdByUserId\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "existing taxpayer id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"warning message \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"duplicate key value violates unique constraint \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"{{taxpayerid}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty first name type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"first name error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"First name and last name for individual client are mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty last name type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"last name error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"First name and last name for individual client are mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"fastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty client type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty gender type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"gender type \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Gender for individual client is mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty stage id type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"stage error\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Stage id is mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty bday type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"BDayh error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"birth_incorp_date for client is mandatory and should be before current date or after 1900-01-01.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty category  type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"client category error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty marital status type 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"client martial status\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"marital status for individual client is mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty nationality id type =1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"empty nationality for type = 1\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"nationality_id for individual client is mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty resident country id type = 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty resident country id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty branch id type = 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty branch id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id type = 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empy created by user id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "internal id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"internal id \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.internalid).not.to.eql(\"11111111\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"11111111\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "gender from 2 to 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"gender form 2 to 1 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.genderId).to.eql(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 1,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "gender from 1 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid gender id error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 200,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "stage from 1 to 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 2,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "stage from 2 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid stage error\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 100,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid bday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid bday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid bday \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"birth_incorp_date for client is mandatory and should be before current date or after 1900-01-01.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"2200-10-10\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "category from 1 to 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"category id from 1 to 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.categoryId).to.eql(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 2,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "category id from 2 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid category id error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 2000,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "marital statsu from 2 to 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"marital status from 2 to 1\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.maritalStatusId).to.eql(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 1,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "marital status from 1 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid marital status error\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 1000,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "nationality from 1 to 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"nationality id from 1 to 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.nationalityId).to.eql(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 2,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "nationality id from 2 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 2000,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "resident country id from 1 to 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"resident country id from 1 to 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.residentCountryId).to.eql(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 2,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "resindent country id from 2 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"resident country id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 20000,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client type from 1 to 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"client type from 1 to 2 without sphare of activity \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"The non individual client can not be opened without specifying the sphere of the activity\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 2,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client type from 1 to 2 with sphare of activity data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"client type id = 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.clientTypeId).to.eql(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 2,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false, \r\n       \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "cient type from 2 to invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid client type \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 20000,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false, \r\n       \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "nationality from 1 to 2 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"nationality id from 1 to 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.nationalityId).to.eql(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n   \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 2,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "clinet language id from 1 to 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"client language id from 1 to 2 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.clientLanguageId).to.eql(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 2,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client language id from 2 to invlid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 20000,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client branch id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"change branch id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 2,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 100,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "modified by user with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 2,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "modified by user with invalid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 2,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \"modifiedByUser\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty modified by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 2,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"okeeeey\",\r\n    \r\n    \"openDate\": \"2020-10-10\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty first name type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty first nem is null\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.firstName).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty last name type  = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty last name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.lastName).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty full name type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty full name for type = 2 \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Full name for non individual client is mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "clientbase table type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"{{createdByUserId}}\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty gender id type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty gender type = 2 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.genderId).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty stage id type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty stage id type = 2 \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Stage id is mandatory\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty bday type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty b day type = 2 \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"birth_incorp_date for client is mandatory and should be before current date or after 1900-01-01\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty category id type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty category id for type =2 \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty marital status type  = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty marotal status type = 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.maritalStatusId).to.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty nationality id type  = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty nationality id for type =2 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.nationalityId).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty resident country id type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty resident country id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty branch id type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty branch id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty created by user uid for type =2 \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":3,\r\n         \"createdByUserId\":\"user\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client address",
					"item": [
						{
							"name": "address id",
							"item": [
								{
									"name": "_Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var res = pm.response.json();\r",
													"pm.environment.set('Authorization', res.accessToken);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"access-control-api",
												"v1",
												"tokens",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "valid address id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
													"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
													"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
													"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t\"id\" : 4,\r\n      \"buildingNumber\": \"200\",\r\n      \"buidingBlockNumber\": \"222/122\",\r\n       \"appartmentNumber\": \"333aaa\",\r\n     \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "incorrect address id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":{{gen}},\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":{{mer}},\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n   \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 20,\r\n      \"createdByUserId\": \"{{$randomWord}}\",\r\n      \"reasonId\": 0,\r\n      \"note\": \"string\",\r\n      \"isDefault\": true,\r\n      \"address\": {\r\n        \"id\": 5000\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "incorrect address id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":{{gen}},\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":{{mer}},\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n   \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 20,\r\n      \"createdByUserId\": \"{{$randomWord}}\",\r\n      \"reasonId\": 0,\r\n      \"note\": \"string\",\r\n      \"isDefault\": true,\r\n      \"address\": {\r\n        \"id\": -10\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "null for addess id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n   \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 20,\r\n      \"createdByUserId\": \"{{$randomWord}}\",\r\n      \"reasonId\": 0,\r\n      \"note\": \"string\",\r\n      \"isDefault\": true,\r\n      \"address\": {\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty address id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":{{gen}},\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":{{mer}},\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n   \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 20,\r\n      \"createdByUserId\": \"{{$randomWord}}\",\r\n      \"reasonId\": 0,\r\n      \"note\": \"string\",\r\n      \"isDefault\": true,\r\n      \"address\": {\r\n        \"id\": \"\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "street id without full address",
							"item": [
								{
									"name": "valid street id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
													"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
													"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
													"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n       \"appartmentNumber\": \"{{$randomInt}}\",\r\n     \"streetId\": 2\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid street id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n       \"appartmentNumber\": \"{{$randomInt}}\",\r\n     \"streetId\": 2000\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty street id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n       \"appartmentNumber\": \"{{$randomInt}}\",\r\n     \"streetId\": \"\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "null for street id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n       \"appartmentNumber\": \"{{$randomInt}}\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "address full",
							"item": [
								{
									"name": "valid full address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
													"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
													"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
													"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n//       \"buildingNumber\": \"{{$randomInt}}\",\r\n//       \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n//        \"appartmentNumber\": \"{{$randomInt}}\",\r\n//      \"streetId\": 2,\r\n      \"addressFull\": \"test 150\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty full address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n//       \"buildingNumber\": \"{{$randomInt}}\",\r\n//       \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n//        \"appartmentNumber\": \"{{$randomInt}}\",\r\n//      \"streetId\": 2,\r\n      \"addressFull\": \"\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "null for full address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n//       \"buildingNumber\": \"{{$randomInt}}\",\r\n//       \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n//        \"appartmentNumber\": \"{{$randomInt}}\",\r\n//      \"streetId\": 2,\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "with other data and without street id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"{{$randomFirstName}}\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n       \"appartmentNumber\": \"{{$randomInt}}\",\r\n    // \"streetId\": 2,\r\n      \"addressFull\": \"test 1500000000\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "full address with incorrect street id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"{{$randomFirstName}}\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n       \"appartmentNumber\": \"{{$randomInt}}\",\r\n    \"streetId\": 2000,\r\n      \"addressFull\": \"test 200\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "full address with valid street id and without other data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"{{$randomFirstName}}\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n      // \"buildingNumber\": \"{{$randomInt}}\",\r\n      // \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n      //  \"appartmentNumber\": \"{{$randomInt}}\",\r\n    \"streetId\": 2,\r\n      \"addressFull\": \"test 200\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "full address with valid street id and 1 type of data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"{{$randomFirstName}}\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      // \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n      //  \"appartmentNumber\": \"{{$randomInt}}\",\r\n    \"streetId\": 2,\r\n      \"addressFull\": \"test 20022\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "full address with empty street id and 1 other data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"{{$randomFirstName}}\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n      \"buildingNumber\": \"{{$randomInt}}\",\r\n      // \"buidingBlockNumber\": \"{{$randomInt}}\",\r\n      //  \"appartmentNumber\": \"{{$randomInt}}\",\r\n   // \"streetId\":\"\",\r\n      \"addressFull\": \"test       20022\"\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "address type",
							"item": [
								{
									"name": "valid address type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
													"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
													"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
													"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 2,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"200\",\r\n      \"buidingBlockNumber\": \"222/122\",\r\n       \"appartmentNumber\": \"333aaa\",\r\n     \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid address type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 200,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"200\",\r\n      \"buidingBlockNumber\": \"222/122\",\r\n       \"appartmentNumber\": \"333aaa\",\r\n     \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty address type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": \"\",\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"200\",\r\n      \"buidingBlockNumber\": \"222/122\",\r\n       \"appartmentNumber\": \"333aaa\",\r\n     \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "null for address type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"200\",\r\n      \"buidingBlockNumber\": \"222/122\",\r\n       \"appartmentNumber\": \"333aaa\",\r\n     \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "reason",
							"item": [
								{
									"name": "valid reason",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
													"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
													"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
													"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
													"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 2,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t//\"id\" : 4,\r\n      \"buildingNumber\": \"200\",\r\n      \"buidingBlockNumber\": \"222/122\",\r\n       \"appartmentNumber\": \"333aaa\",\r\n     \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "note",
							"item": []
						},
						{
							"name": "client address table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
											"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":3,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientAddresses\": [\r\n    {\r\n      \"addressTypeId\": 1,\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"isDefault\": true,\r\n    \t  \"address\": {\r\n\t\t\t\"id\" : 4\r\n      // \"buildingNumber\": \"11\",\r\n      // \"buidingBlockNumber\": \"22\",\r\n      //  \"appartmentNumber\": \"333\",\r\n      // \"streetId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client address table min",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"gen\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14]));\r",
											"pm.environment.set(\"mer\", _.sample([1,2,3,4,5,6]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":{{gen}},\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":{{mer}},\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n   \"clientAddresses\": [\r\n    {\r\n      \"id\": 15,\r\n     // \"clientId\": 0,\r\n     // \"addressId\": 5,\r\n      \"addressTypeId\": 20,\r\n   //   \"beginDate\": \"2022-05-05T13:28:54.263Z\",\r\n      \"createdByUserId\": \"string\",\r\n      \"reasonId\": 0,\r\n      \"note\": \"string\",\r\n      \"isDefault\": true,\r\n      \"address\": {\r\n        \"id\": 5,\r\n      //   \"latitude\": \"10\",\r\n      //   \"longitude\": \"11\",\r\n      //   \"buildingNumber\": \"12\",\r\n      //   \"buidingBlockNumber\": \"13\",\r\n      //   \"appartmentNumber\": \"14\",\r\n      //   \"streetId\": 2,\r\n       // \"addressFull\": \"string\",\r\n        \"buildingTypeId\": 1\r\n      }\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty address id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n         \"addressTypeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null address id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n           \"addressId\":\"\",\r\n         \"addressTypeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect address type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n           \"addressId\":2,\r\n         \"addressTypeId\":1000,\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty address type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n           \"addressId\":2,\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null address type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n           \"addressId\":2,\r\n           \"addressTypeId\":\"\",\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n           \"addressId\":2,\r\n           \"addressTypeId\":2,\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client address table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[1].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[1].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[1].modifiedByUser);\r",
											"// postman.setEnvironmentVariable(\"address1\",idi.clientAddresses[0].id);\r",
											"// postman.setEnvironmentVariable(\"addressid1\",idi.clientAddresses[0].addressId);\r",
											"// postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"// postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdDate\": \"{{createdDate}}\",\r\n    \"modifiedByUser\": {{modifedbyuserid}},\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"closedDate\": \"3000-01-01T00:00:00\",\r\n    \"reasonId\": null,\r\n    \"note\": null,\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n   \"clientAddresses\": [\r\n        {\r\n            \"id\": {{address}},\r\n            \"clientId\": {{clientid}},\r\n            \"addressId\": 1,\r\n            \"addressTypeId\": 1,\r\n            \"createdDate\": \"{{addresscreateday}}\",\r\n            \"createdByUserId\": \"{{addresscreate}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client address table Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[2].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[2].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[2].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[2].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[2].modifiedByUser);\r",
											"// postman.setEnvironmentVariable(\"address\",idi.clientAddresses[1].id);\r",
											"// postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[1].addressId);\r",
											"// postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[1].createdDate);\r",
											"// postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[1].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[1].modifiedByUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdDate\": \"{{createdDate}}\",\r\n    \"modifiedByUser\": {{modifedbyuserid}},\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"closedDate\": \"3000-01-01T00:00:00\",\r\n    \"reasonId\": null,\r\n    \"note\": null,\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n   \"clientAddresses\": [\r\n        {\r\n            \"id\": {{address}},\r\n            \"clientId\": {{clientid}},\r\n            \"addressId\": 3,\r\n            \"addressTypeId\": 1,\r\n            \"createdDate\": \"{{addresscreateday}}\",\r\n            \"createdByUserId\": \"{{addresscreate}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"    //  pm.test(\"clientAddresses id is true \", function () {\r",
											"    // var ok= pm.response.json();\r",
											"    // pm.expect(ok.clientAddresses[0].id).to.eql(parseInt(pm.environment.get(\"address\")));\r",
											"    // });\r",
											"     pm.test(\"clientAddresses id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[2].id).to.eql(parseInt(pm.environment.get(\"address\")));\r",
											"    });\r",
											"      pm.test(\"addressid id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    var addressId = parseInt(pm.environment.get(\"addressid\"));\r",
											"    \r",
											"    \r",
											"    pm.expect(ok.clientAddresses[2].addressId).to.eql(addressId);\r",
											"    });\r",
											"pm.test(\"inactive table with <is default> false status \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    var isDefault = parseInt(pm.environment.get(\"isDefault\"));\r",
											"    pm.expect(ok.clientAddresses[0].isDefault).to.eql(true);\r",
											"    });\r",
											" pm.test(\"address create day is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].createdDate).to.eql(pm.environment.get(\"addresscreateday\"));\r",
											" });\r",
											"  pm.test(\"address created by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[0].createdByUserId).to.eql(pm.environment.get(\"addresscreate\"));\r",
											" });\r",
											" pm.test(\"address modify  by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientAddresses[2].modifiedByUser).to.eql(pm.environment.get(\"addressmodify\"));\r",
											" });\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect address table id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdDate\": \"{{createdDate}}\",\r\n    \"modifiedByUser\": {{modifedbyuserid}},\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"closedDate\": \"3000-01-01T00:00:00\",\r\n    \"reasonId\": null,\r\n    \"note\": null,\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n   \"clientAddresses\": [\r\n        {\r\n            \"id\": 1,\r\n            \"clientId\": {{clientid}},\r\n            \"addressId\": 1,\r\n            \"addressTypeId\": 1,\r\n            \"createdDate\": \"{{addresscreateday}}\",\r\n            \"createdByUserId\": \"{{addresscreate}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client address table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n         \"addressId\":2,\r\n         \"addressTypeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client address table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[0].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[0].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"//postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n     \"clientAddresses\":[\r\n      {\r\n         \"addressId\":2,\r\n         \"addressTypeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"address\",idi.clientAddresses[1].id);\r",
											"postman.setEnvironmentVariable(\"addressid\",idi.clientAddresses[1].addressId);\r",
											"postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[1].modifiedByUser);\r",
											"// postman.setEnvironmentVariable(\"address1\",idi.clientAddresses[0].id);\r",
											"// postman.setEnvironmentVariable(\"addressid1\",idi.clientAddresses[0].addressId);\r",
											"// postman.setEnvironmentVariable(\"addresscreateday\",idi.clientAddresses[0].createdDate);\r",
											"// postman.setEnvironmentVariable(\"addresscreate\",idi.clientAddresses[0].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"addressmodify\",idi.clientAddresses[0].modifiedByUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"fullName\": \"{{fullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"createdDate\": \"{{createdDate}}\",\r\n    \"modifiedByUser\": {{modifedbyuserid}},\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"closedDate\": \"3000-01-01T00:00:00\",\r\n    \"reasonId\": null,\r\n    \"note\": null,\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n   \"clientAddresses\": [\r\n        {\r\n            \"id\": 1,\r\n            \"clientId\": {{clientid}},\r\n            \"addressId\": 1,\r\n            \"addressTypeId\": 1,\r\n            \"createdDate\": \"{{addresscreateday}}\",\r\n            \"createdByUserId\": \"111\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{Authorization}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Client phone",
					"item": [
						{
							"name": "2 phone",
							"item": [
								{
									"name": "2 phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
													"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[1].id);\r",
													"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[1].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[1].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[1].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[1].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[1].modifiedByUser);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"{{$randomInt}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n         {\r\n         \"phone\":\"{{$randomInt}}\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "client phone full",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[0].id);\r",
													"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[0].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[0].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[0].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[0].modifiedByUser);\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[1].id);\r",
													"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[1].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[1].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[1].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[1].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[1].modifiedByUser);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\": [\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 1,\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": true\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid1}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 2,\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId1}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"reasonId\": null,\r\n\t\t\t\"note\": null,\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": false\r\n\t\t}\r\n\t]\r\n   \r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "get phone Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"first name is true\", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
													"    });\r",
													"    pm.test(\"middle name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
													"    });\r",
													"      pm.test(\"last name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
													"    });\r",
													"      pm.test(\"full name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
													"    });\r",
													"      pm.test(\"birthIncorpDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
													"    });\r",
													"      pm.test(\"createdByUserId is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
													"    });\r",
													"        pm.test(\"createdDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
													"    });\r",
													"        pm.test(\"modifiedByUser is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
													"    });\r",
													"      pm.test(\"openDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
													"    });\r",
													"    \r",
													"\r",
													"     pm.test(\"client Phone id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[1].id).to.eql(parseInt(pm.environment.get(\"Phoneid\")));\r",
													" });\r",
													" pm.test(\"client phone  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[1].phone).to.eql(pm.environment.get(\"phone\"));\r",
													" });\r",
													" pm.test(\"client Phone type Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[1].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId\")));\r",
													" });\r",
													"\r",
													"    pm.test(\"client Phone id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].id).to.eql(parseInt(pm.environment.get(\"Phoneid1\")));\r",
													" });\r",
													" pm.test(\"client phone  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].phone).to.eql(pm.environment.get(\"phone1\"));\r",
													" });\r",
													" pm.test(\"client Phone type Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId1\")));\r",
													" });\r",
													" pm.test(\"client Phone created Date id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate1\"));\r",
													" });\r",
													" pm.test(\"client Phone created By User Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
													" });\r",
													" pm.test(\"client Phone modified By User  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[1].modifiedByUser).to.eql(pm.environment.get(\"PhonemodifiedByUser\"));\r",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients",
												"{{clientid}}"
											],
											"query": [
												{
													"key": "detailLevel",
													"value": "full"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close all phones and insert new default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[0].id);\r",
													"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[0].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[0].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[0].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[0].modifiedByUser);\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[1].id);\r",
													"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[1].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[1].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[1].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[1].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[1].modifiedByUser);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\": [\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 1,\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"reasonId\": 1,\r\n\t\t\t\"note\": \"srlnvm\",\r\n\t\t\t\"isActive\": false,\r\n\t\t\t\"isDefault\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid1}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 2,\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId1}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"reasonId\": 1,\r\n\t\t\t\"note\": \"seldnjl\",\r\n\t\t\t\"isActive\": false,\r\n\t\t\t\"isDefault\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"clientId\": {{clientid}},\r\n         \"phone\":\"{{$randomInt}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n\t]\r\n   \r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "1 phone",
							"item": [
								{
									"name": "1 phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
													"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
													"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
													"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
													"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
												"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"{{$randomInt}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "update phone number and type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[0].id);\r",
													"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[0].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[0].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[0].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[0].modifiedByUser);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\": [\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 2,\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": true\r\n\t\t\r\n\t\t}\r\n\t]\r\n   \r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "get phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"first name is true\", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
													"    });\r",
													"    pm.test(\"middle name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
													"    });\r",
													"      pm.test(\"last name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
													"    });\r",
													"      pm.test(\"full name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
													"    });\r",
													"      pm.test(\"birthIncorpDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
													"    });\r",
													"      pm.test(\"createdByUserId is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
													"    });\r",
													"        pm.test(\"createdDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
													"    });\r",
													"        pm.test(\"modifiedByUser is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
													"    });\r",
													"      pm.test(\"openDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
													"    });\r",
													"    \r",
													"\r",
													"\r",
													"    pm.test(\"client Phone id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].id).to.eql(parseInt(pm.environment.get(\"Phoneid1\")));\r",
													" });\r",
													" pm.test(\"client phone  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].phone).to.eql(pm.environment.get(\"phone1\"));\r",
													" });\r",
													" pm.test(\"client Phone type Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId1\")));\r",
													" });\r",
													" pm.test(\"client Phone created Date id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate1\"));\r",
													" });\r",
													" pm.test(\"client Phone created By User Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
													" });\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients",
												"{{clientid}}"
											],
											"query": [
												{
													"key": "detailLevel",
													"value": "full"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close first default and insert new",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
													"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
													"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
													"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
													"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
													"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
													"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
													"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
													"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
													"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
													"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
													"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
													"\r",
													"\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[0].id);\r",
													"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[0].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[0].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[0].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[0].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[0].modifiedByUser);\r",
													"\r",
													"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[1].id);\r",
													"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[1].phone);\r",
													"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[1].typeId);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[1].createdDate);\r",
													"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[1].createdByUserId);\r",
													"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[1].modifiedByUser);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\": [\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 1,\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"reasonId\": 1,\r\n\t\t\t\"note\": \"srlnvm\",\r\n\t\t\t\"isActive\": false,\r\n\t\t\t\"isDefault\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"clientId\": {{clientid}},\r\n         \"phone\":\"{{$randomInt}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n\t]\r\n   \r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "get phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"first name is true\", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
													"    });\r",
													"    pm.test(\"middle name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
													"    });\r",
													"      pm.test(\"last name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
													"    });\r",
													"      pm.test(\"full name is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
													"    });\r",
													"      pm.test(\"birthIncorpDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
													"    });\r",
													"      pm.test(\"createdByUserId is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
													"    });\r",
													"        pm.test(\"createdDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
													"    });\r",
													"        pm.test(\"modifiedByUser is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
													"    });\r",
													"      pm.test(\"openDate is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
													"    });\r",
													"    \r",
													"\r",
													"\r",
													"    pm.test(\"client Phone id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].id).to.eql(parseInt(pm.environment.get(\"Phoneid1\")));\r",
													" });\r",
													" pm.test(\"client phone  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].phone).to.eql(pm.environment.get(\"phone1\"));\r",
													" });\r",
													" pm.test(\"client Phone type Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId1\")));\r",
													" });\r",
													" pm.test(\"client Phone created Date id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate1\"));\r",
													" });\r",
													" pm.test(\"client Phone created By User Id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
													" });\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"clients",
												"{{clientid}}"
											],
											"query": [
												{
													"key": "detailLevel",
													"value": "full"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"\r",
											"// postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[1].id);\r",
											"// postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[1].phone);\r",
											"// postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[1].typeId);\r",
											"// postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[1].createdDate);\r",
											"// postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[1].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[1].modifiedByUser);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"{{$randomInt}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n      \r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "type = 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ],\r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"{{phone}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n      \r\n   ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"// postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[1].id);\r",
											"// postman.setEnvironmentVariable(\"phone\",idi.clientPhones[1].phone);\r",
											"// postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[1].typeId);\r",
											"// postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[1].createdDate);\r",
											"// postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[1].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[1].modifiedByUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\":[\r\n      {\r\n          \"id\": {{Phoneid}},\r\n\t    \"clientId\": {{clientid}},\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"modifiedByUser\": \"{{$randomFirstName}}\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n       }]\r\n   \r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "1+1 phone /  insert +1 existing default phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"error message \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"The phone already exists\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\": [\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{phone}}\",\r\n\t\t\t\"typeId\": 1,\r\n\t\t\t\"createdDate\": \"{{PhonecreatedDate}}\",\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": false\r\n\t\t}, \r\n\r\n\t\t{\r\n\t\t\t\"clientId\": {{clientid}},\r\n         \"phone\":\"280\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n\t]\r\n   \r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "1+1 phone /  insert +1 valid phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[1].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[1].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[1].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[1].modifiedByUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\": [\r\n\t\t{\r\n\t\t\t\"id\": {{Phoneid}},\r\n\t\t\t\"clientId\": {{clientid}},\r\n\t\t\t\"phone\": \"{{$randomBankAccount}}\",\r\n\t\t\t\"typeId\": 1,\r\n\t\t\t\"createdDate\": \"{{PhonecreatedDate}}\",\r\n\t\t\t\"createdByUserId\": \"{{PhonecreatedByUserId}}\",\r\n\t\t\t\"modifiedByUser\": \"{{$randomFirstName}}\",\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": true\r\n\t\t}, \r\n\r\n\t\t{\r\n\t   \"clientId\": {{clientid}},\r\n         \"phone\":\"555\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n\t]\r\n   \r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"    \r",
											"\r",
											"     pm.test(\"client Phone id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].id).to.eql(parseInt(pm.environment.get(\"Phoneid\")));\r",
											" });\r",
											" pm.test(\"client phone  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].phone).to.eql(pm.environment.get(\"phone\"));\r",
											" });\r",
											" pm.test(\"client Phone type Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId\")));\r",
											" });\r",
											"\r",
											"    pm.test(\"client Phone id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].id).to.eql(parseInt(pm.environment.get(\"Phoneid1\")));\r",
											" });\r",
											" pm.test(\"client phone  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].phone).to.eql(pm.environment.get(\"phone1\"));\r",
											" });\r",
											" pm.test(\"client Phone type Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId1\")));\r",
											" });\r",
											" pm.test(\"client Phone created Date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate1\"));\r",
											" });\r",
											" pm.test(\"client Phone created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Phone modified By User  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].modifiedByUser).to.eql(pm.environment.get(\"PhonemodifiedByUser\"));\r",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1 phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[0].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[0].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[0].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[0].modifiedByUser);\r",
											"\r",
											"\r",
											"// postman.setEnvironmentVariable(\"Phoneid1\",idi.clientPhones[1].id);\r",
											"// postman.setEnvironmentVariable(\"phone1\",idi.clientPhones[1].phone);\r",
											"// postman.setEnvironmentVariable(\"PhonetypeId1\",idi.clientPhones[1].typeId);\r",
											"// postman.setEnvironmentVariable(\"PhonecreatedDate1\",idi.clientPhones[1].createdDate);\r",
											"// postman.setEnvironmentVariable(\"PhonecreatedByUserId1\",idi.clientPhones[1].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"PhonemodifiedByUser1\",idi.clientPhones[1].modifiedByUser);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\":[\r\n      {\r\n          \"id\": {{Phoneid}},\r\n\t    \r\n         \"phone\":\"1111\",\r\n\t   \"clientId\": {{clientid}},\r\n         \"typeId\":10000,\r\n         \"modifiedByUser\": \"aaa\",\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n       }]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"default error message \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Default values validation did not pass for client_phone during insert operation\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n         {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "same value for phone numbers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"default error message \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"duplicate key value violates unique constraint\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"99637736\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n         {\r\n         \"phone\":\"99637736\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "without default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"default error message \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Default values validation did not pass for client_phone during insert operation\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      },\r\n         {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n         \"typeId\":2,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"Phone number is incorrect\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"aaa\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"insert or update on table \");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"09963773600\",\r\n         \"typeId\":1000,\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"insert or update on table \");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"09963773600\",\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"Error converting value {null} to type \");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"09963773600\",\r\n         \"typeId\":\"\",\r\n         \"createdByUserId\":\"user\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientPhones\":[\r\n      {\r\n         \"phone\":\"09963773600\",\r\n         \"typeId\":1,\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"Phone number is incorrect\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\":[\r\n      {\r\n          \"id\": {{Phoneid}},\r\n\t     \"clientId\": {{clientid}},\r\n         \"phone\":\"aaa\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"modifiedByUser\": \"aaa\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n       }]\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect phone number Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"Default values validation did not pass for client_phone during update operation\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\":[\r\n      {\r\n          \"id\": {{Phoneid}},\r\n\t    \"clientId\": {{clientid}},\r\n         \"phone\":\"09667777777777777777777\",\r\n         \"typeId\":1,\r\n         \"modifiedByUser\": \"aaa\",\r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n       }]\r\n  \r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client phone Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Phoneid\",idi.clientPhones[1].id);\r",
											"postman.setEnvironmentVariable(\"phone\",idi.clientPhones[1].phone);\r",
											"postman.setEnvironmentVariable(\"PhonetypeId\",idi.clientPhones[1].typeId);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedDate\",idi.clientPhones[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"PhonecreatedByUserId\",idi.clientPhones[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"PhonemodifiedByUser\",idi.clientPhones[1].modifiedByUser);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientPhones\":[\r\n      {\r\n         \"phone\":\"3749988{{$randomCreditCardMask}}\",\r\n\t   \"clientId\": {{clientid}},\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n         \"modifiedByUser\": \"aaa\",\r\n         \"note\" : null, \r\n         \"reasonId\" : null,\r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n       }],\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"    \r",
											"\r",
											"    pm.test(\"client Phone id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].id).to.eql(parseInt(pm.environment.get(\"Phoneid\")));\r",
											" });\r",
											" pm.test(\"client phone  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].phone).to.eql(pm.environment.get(\"phone\"));\r",
											" });\r",
											" pm.test(\"client Phone type Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].typeId).to.eql(parseInt(pm.environment.get(\"PhonetypeId\")));\r",
											" });\r",
											" pm.test(\"client Phone created Date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].createdDate).to.eql(pm.environment.get(\"PhonecreatedDate\"));\r",
											" });\r",
											" pm.test(\"client Phone created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[0].createdByUserId).to.eql(pm.environment.get(\"PhonecreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Phone modified By User  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientPhones[1].modifiedByUser).to.eql(pm.environment.get(\"PhonemodifiedByUser\"));\r",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client email",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientEmails\":[\r\n      {\r\n         \"email\":\"{{$randomEmail}}\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client  email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": 547,\r\n\t\"internalid\": \"2746284\",\r\n\t\"taxpayerid\": \"1237501325\",\r\n\t\"firstName\": \"Antoinette\",\r\n\t\"middleName\": \"Lavinia\",\r\n\t\"lastName\": \"Dickens\",\r\n\t\"fullName\": \"Antoinette Lavinia Dickens\",\r\n\t\"clientTypeId\": 1,\r\n\t\"genderId\": 2,\r\n\t\"clientStageId\": 1,\r\n\t\"clientLanguageId\": 1,\r\n\t\"birthIncorpDate\": \"1996-04-16T00:00:00\",\r\n\t\"categoryId\": 1,\r\n\t\"maritalStatusId\": 2,\r\n\t\"nationalityId\": 1,\r\n\t\"residentCountryId\": 1,\r\n\t\"branchId\": 1,\r\n\t\"extension1\": null,\r\n\t\"extension2\": null,\r\n\t\"extension3\": null,\r\n\t\"createdByUserId\": \"user\",\r\n\t\"createdDate\": \"2022-04-19T12:22:46\",\r\n\t\"modifiedByUser\": null,\r\n\t\"openDate\": \"2022-04-19T00:00:00\",\r\n\t\"closedDate\": \"3000-01-01T00:00:00\",\r\n\t\"reasonId\": null,\r\n\t\"note\": null,\r\n\t\"isActive\": true,\r\n\t\"isResident\": true,\r\n\t\"isInternational\": false,\r\n\t\"isEmployee\": true,\r\n\t\"isRelated\": false,\r\n\t\"isGovernmental\": false,\r\n\t\"clientAddresses\": [],\r\n\t\"clientDocuments\": [],\r\n\t\"clientEmails\": [\r\n\t\t{\r\n\t\t\t\"id\": 75,\r\n\t\t\t\"clientId\": 547,\r\n\t\t\t\"email\": \"111@gmail.com\",\r\n\t\t\t\"typeId\": 2,\r\n\t\t\t\"createdDate\": \"2022-04-19T12:22:46\",\r\n\t\t\t\"createdByUserId\": \"user\",\r\n\t\t\t\"modifiedByUser\": null,\r\n\t\t\t\"beginDate\": \"2022-04-19T00:00:00\",\r\n\t\t\t\"endDate\": \"3000-01-01T00:00:00\",\r\n\t\t\t\"reasonId\": null,\r\n\t\t\t\"note\": null,\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 76,\r\n\t\t\t\"clientId\": 547,\r\n\t\t\t\"email\": \"222@gmail.com\",\r\n\t\t\t\"typeId\": 1,\r\n\t\t\t\"createdDate\": \"2022-04-19T12:22:46\",\r\n\t\t\t\"createdByUserId\": \"user\",\r\n\t\t\t\"modifiedByUser\": null,\r\n\t\t\t\"beginDate\": \"2022-04-19T00:00:00\",\r\n\t\t\t\"endDate\": \"3000-01-01T00:00:00\",\r\n\t\t\t\"reasonId\": null,\r\n\t\t\t\"note\": null,\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": true\r\n\t\t}\r\n\t],\r\n\t\"clientPhones\": [],\r\n\t\"clientSphereOfActivities\": [],\r\n\t\"clientAttributes\": [],\r\n\t\"clientDocumentAdditionals\": [],\r\n\t\"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"   \r",
											"\r",
											"    pm.test(\"client email id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].id).to.eql(parseInt(pm.environment.get(\"emailid\")));\r",
											" });\r",
											" pm.test(\"client email  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].email).to.eql(pm.environment.get(\"email\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdDate).to.eql(pm.environment.get(\"emailcreatedDate\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser\"));\r",
											" });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid1\",idi.clientEmails[1].id);\r",
											"postman.setEnvironmentVariable(\"email1\",idi.clientEmails[1].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId1\",idi.clientEmails[1].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate1\",idi.clientEmails[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId1\",idi.clientEmails[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser1\",idi.clientEmails[1].modifiedByUser);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientEmails\":[\r\n      {\r\n         \"email\":\"test{{$randomCreditCardMask}}@gmail.com\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n\t{\r\n         \"email\":\"test{{$randomCreditCardMask}}@gmail.com\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 emails",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"   \r",
											"\r",
											"    pm.test(\"client email id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].id).to.eql(parseInt(pm.environment.get(\"emailid\")));\r",
											" });\r",
											" pm.test(\"client email  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].email).to.eql(pm.environment.get(\"email\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdDate).to.eql(pm.environment.get(\"emailcreatedDate\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"     pm.test(\"client email id is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].id).to.eql(parseInt(pm.environment.get(\"emailid1\")));\r",
											" });\r",
											" pm.test(\"client email  is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].email).to.eql(pm.environment.get(\"email1\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId1\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].createdDate).to.eql(pm.environment.get(\"emailcreatedDate1\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId1\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser1\"));\r",
											" });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 email +1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid\",idi.clientEmails[0].id);\r",
											"postman.setEnvironmentVariable(\"email\",idi.clientEmails[0].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId\",idi.clientEmails[0].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate\",idi.clientEmails[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId\",idi.clientEmails[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser\",idi.clientEmails[0].modifiedByUser);\r",
											"\r",
											"postman.setEnvironmentVariable(\"emailid1\",idi.clientEmails[1].id);\r",
											"postman.setEnvironmentVariable(\"email1\",idi.clientEmails[1].email);\r",
											"postman.setEnvironmentVariable(\"emailtypeId1\",idi.clientEmails[1].typeId);\r",
											"postman.setEnvironmentVariable(\"emailcreatedDate1\",idi.clientEmails[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"emailcreatedByUserId1\",idi.clientEmails[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"emailmodifiedByUser1\",idi.clientEmails[1].modifiedByUser);\r",
											"\r",
											"\r",
											"// postman.setEnvironmentVariable(\"emailid2\",idi.clientEmails[2].id);\r",
											"// postman.setEnvironmentVariable(\"email2\",idi.clientEmails[2].email);\r",
											"// postman.setEnvironmentVariable(\"emailtypeId2\",idi.clientEmails[2].typeId);\r",
											"// postman.setEnvironmentVariable(\"emailcreatedDate2\",idi.clientEmails[2].createdDate);\r",
											"// postman.setEnvironmentVariable(\"emailcreatedByUserId2\",idi.clientEmails[2].createdByUserId);\r",
											"// postman.setEnvironmentVariable(\"emailmodifiedByUser2\",idi.clientEmails[2].modifiedByUser);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientEmails\": [\r\n        {\r\n            \"id\": {{emailid}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"{{$randomEmail}}\",\r\n            \"typeId\": {{emailtypeId}},\r\n            \"createdDate\": \"{{emailcreatedDate}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId}}\",\r\n            \"modifiedByUser\": \"{{$randomFirstName}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": false\r\n        },\r\n\t  {\r\n            \"id\": {{emailid1}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"{{email1}}\",\r\n            \"typeId\": {{emailtypeId1}},\r\n            \"createdDate\": \"{{emailcreatedDate1}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId1}}\",\r\n            \"modifiedByUser\": \"{{$randomFirstName}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        },\r\n\t  {\r\n         \"email\":\"test{{$randomCreditCardMask}}@gmail.com\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 + 1 email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"   \r",
											"\r",
											"    pm.test(\"client email id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].id).to.eql(parseInt(pm.environment.get(\"emailid\")));\r",
											" });\r",
											" pm.test(\"client email  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].email).to.eql(pm.environment.get(\"email\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdDate).to.eql(pm.environment.get(\"emailcreatedDate\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[0].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"     pm.test(\"client email id is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].id).to.eql(parseInt(pm.environment.get(\"emailid1\")));\r",
											" });\r",
											" pm.test(\"client email  is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].email).to.eql(pm.environment.get(\"email1\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId1\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].createdDate).to.eql(pm.environment.get(\"emailcreatedDate1\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId1\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[1].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser1\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"    pm.test(\"client email id is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[2].id).to.eql(parseInt(pm.environment.get(\"emailid2\")));\r",
											" });\r",
											" pm.test(\"client email  is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[2].email).to.eql(pm.environment.get(\"emailid2\"));\r",
											" });\r",
											" pm.test(\"client email type Id is true2 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[2].typeId).to.eql(parseInt(pm.environment.get(\"emailtypeId2\")));\r",
											" });\r",
											"  pm.test(\"client email created Date  is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[2].createdDate).to.eql(pm.environment.get(\"emailcreatedDate2\"));\r",
											" });\r",
											" pm.test(\"client email created By User Id  is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[2].createdByUserId).to.eql(pm.environment.get(\"emailcreatedByUserId2\"));\r",
											"     });\r",
											"      pm.test(\"client email modified By User is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientEmails[2].modifiedByUser).to.eql(pm.environment.get(\"emailmodifiedByUser2\"));\r",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"Email format is incorrect\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientEmails\":[\r\n      {\r\n         \"email\":\"test\",\r\n         \"typeId\":1,\r\n         \"createdByUserId\":\"user\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect email type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientEmails\":[\r\n      {\r\n         \"email\":\"test{{$randomCreditCardMask}}@gmail.com\",\r\n         \"typeId\":10000,\r\n         \"createdByUserId\":\"user\",\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \r\n \"clientEmails\":[\r\n      {\r\n         \"email\":\"test{{$randomCreditCardMask}}@gmail.com\",\r\n         \"typeId\":10000,\r\n          \"reasonId\" : null,\r\n          \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"Email format is incorrect\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientEmails\": [\r\n        {\r\n            \"id\": {{emailid}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"aaa\",\r\n            \"typeId\": {{emailtypeId}},\r\n            \"createdDate\": \"{{emailcreatedDate}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId}}\",\r\n            \"modifiedByUser\": \"{{$randomFirstName}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect email type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientEmails\": [\r\n        {\r\n            \"id\": {{emailid}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"{{$randomEmail}}\",\r\n            \"typeId\": 1000,\r\n            \"createdDate\": \"{{emailcreatedDate}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId}}\",\r\n            \"modifiedByUser\": \"{{$randomFirstName}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty modify by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\r\n     \"clientEmails\": [\r\n        {\r\n            \"id\": {{emailid}},\r\n            \"clientId\": {{clientid}},\r\n            \"email\": \"{{$randomEmail}}\",\r\n            \"typeId\": 1,\r\n            \"createdDate\": \"{{emailcreatedDate}}\",\r\n            \"createdByUserId\": \"{{emailcreatedByUserId}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client document",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid\",idi.clientDocuments[0].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId\",idi.clientDocuments[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid\",idi.clientDocuments[0].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority\",idi.clientDocuments[0].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate\",idi.clientDocuments[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate\",idi.clientDocuments[0].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId\",idi.clientDocuments[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate\",idi.clientDocuments[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId\",idi.clientDocuments[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser\",idi.clientDocuments[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate\",idi.clientDocuments[0].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate\",idi.clientDocuments[0].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId\",idi.clientDocuments[0].issuedCountryId);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client  document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid\",idi.clientDocuments[0].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId\",idi.clientDocuments[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid\",idi.clientDocuments[0].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority\",idi.clientDocuments[0].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate\",idi.clientDocuments[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate\",idi.clientDocuments[0].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId\",idi.clientDocuments[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate\",idi.clientDocuments[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId\",idi.clientDocuments[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser\",idi.clientDocuments[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate\",idi.clientDocuments[0].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate\",idi.clientDocuments[0].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId\",idi.clientDocuments[0].issuedCountryId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n            \"documentTypeId\": {{documentTypeId}},\r\n            \"documentid\": \"{{$randomInt}}\",\r\n            \"issuingAuthority\": \"{{$randomFullName}}\",\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n    \r\n    \r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"    pm.test(\"client doc id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].id).to.eql(parseInt(pm.environment.get(\"Docid\")));\r",
											" });\r",
											" pm.test(\"client doc type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"documentTypeId\")));\r",
											" });\r",
											"pm.test(\"client document id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentid).to.eql(pm.environment.get(\"documentid\"));\r",
											" });\r",
											" pm.test(\"client document issuing authority  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuingAuthority).to.eql(pm.environment.get(\"docissuingAuthority\"));\r",
											" });\r",
											" pm.test(\"client document  expired date is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].expiredDate).to.eql(pm.environment.get(\"docexpiredDate\"));\r",
											" });\r",
											"  pm.test(\"client document  source id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].sourceId).to.eql(parseInt(pm.environment.get(\"docsourceId\")));\r",
											" });\r",
											" pm.test(\"client document  created date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdDate).to.eql(pm.environment.get(\"doccreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client document created by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdByUserId).to.eql(pm.environment.get(\"doccreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client document modify by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].modifiedByUser).to.eql(pm.environment.get(\"docmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].beginDate).to.eql(pm.environment.get(\"docbeginDate\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].endDate).to.eql(pm.environment.get(\"docendDate\"));\r",
											" });\r",
											"pm.test(\"client documentissue dCountry Id   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuedCountryId).to.eql(parseInt(pm.environment.get(\"docissuedCountryId\")));\r",
											" });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid\",idi.clientDocuments[0].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId\",idi.clientDocuments[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid\",idi.clientDocuments[0].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority\",idi.clientDocuments[0].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate\",idi.clientDocuments[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate\",idi.clientDocuments[0].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId\",idi.clientDocuments[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate\",idi.clientDocuments[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId\",idi.clientDocuments[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser\",idi.clientDocuments[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate\",idi.clientDocuments[0].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate\",idi.clientDocuments[0].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId\",idi.clientDocuments[0].issuedCountryId);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"Docid1\",idi.clientDocuments[1].id);\r",
											"postman.setEnvironmentVariable(\"documentTypeId1\",idi.clientDocuments[1].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"documentid1\",idi.clientDocuments[1].documentid);\r",
											"postman.setEnvironmentVariable(\"docissuingAuthority1\",idi.clientDocuments[1].issuingAuthority);\r",
											"postman.setEnvironmentVariable(\"docissuedDate1\",idi.clientDocuments[1].issuedDate);\r",
											"postman.setEnvironmentVariable(\"docexpiredDate1\",idi.clientDocuments[1].expiredDate);\r",
											"postman.setEnvironmentVariable(\"docsourceId1\",idi.clientDocuments[1].sourceId);\r",
											"postman.setEnvironmentVariable(\"doccreatedDate1\",idi.clientDocuments[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"doccreatedByUserId1\",idi.clientDocuments[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"docmodifiedByUser1\",idi.clientDocuments[1].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"docbeginDate1\",idi.clientDocuments[1].beginDate);\r",
											"postman.setEnvironmentVariable(\"docendDate1\",idi.clientDocuments[1].endDate);\r",
											"postman.setEnvironmentVariable(\"docissuedCountryId1\",idi.clientDocuments[1].issuedCountryId);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"3\", _.sample([1,2,3,4]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":{{3}},\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"1{{1}}20-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : {{2}},\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n\t     {\r\n         \"documentTypeId\":{{3}},\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"1{{1}}20-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : {{1}},\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 +1 doc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"    pm.test(\"client doc id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].id).to.eql(parseInt(pm.environment.get(\"Docid\")));\r",
											" });\r",
											" pm.test(\"client doc type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"documentTypeId\")));\r",
											" });\r",
											"pm.test(\"client document id is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].documentid).to.eql(pm.environment.get(\"documentid\"));\r",
											" });\r",
											" pm.test(\"client document issuing authority  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuingAuthority).to.eql(pm.environment.get(\"docissuingAuthority\"));\r",
											" });\r",
											" pm.test(\"client document  expired date is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].expiredDate).to.eql(pm.environment.get(\"docexpiredDate\"));\r",
											" });\r",
											"  pm.test(\"client document  source id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].sourceId).to.eql(parseInt(pm.environment.get(\"docsourceId\")));\r",
											" });\r",
											" pm.test(\"client document  created date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdDate).to.eql(pm.environment.get(\"doccreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client document created by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].createdByUserId).to.eql(pm.environment.get(\"doccreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client document modify by user id  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].modifiedByUser).to.eql(pm.environment.get(\"docmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].beginDate).to.eql(pm.environment.get(\"docbeginDate\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].endDate).to.eql(pm.environment.get(\"docendDate\"));\r",
											" });\r",
											"pm.test(\"client documentissue dCountry Id   date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[0].issuedCountryId).to.eql(parseInt(pm.environment.get(\"docissuedCountryId\")));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											" pm.test(\"client doc id   is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].id).to.eql(parseInt(pm.environment.get(\"Docid2\")));\r",
											" });\r",
											" pm.test(\"client doc type id   is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].documentTypeId).to.eql(parseInt(pm.environment.get(\"documentTypeId2\")));\r",
											" });\r",
											"pm.test(\"client document id is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].documentid).to.eql(pm.environment.get(\"documentid2\"));\r",
											" });\r",
											" pm.test(\"client document issuing authority  is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].issuingAuthority).to.eql(pm.environment.get(\"docissuingAuthority2\"));\r",
											" });\r",
											" pm.test(\"client document  expired date is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].expiredDate).to.eql(pm.environment.get(\"docexpiredDate2\"));\r",
											" });\r",
											"  pm.test(\"client document  source id  is true2 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].sourceId).to.eql(parseInt(pm.environment.get(\"docsourceId2\")));\r",
											" });\r",
											" pm.test(\"client document  created date    is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].createdDate).to.eql(pm.environment.get(\"doccreatedDate2\"));\r",
											" });\r",
											"  pm.test(\"client document created by user id  date    is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].createdByUserId).to.eql(pm.environment.get(\"doccreatedByUserId2\"));\r",
											" });\r",
											"  pm.test(\"client document modify by user id  date    is true2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].modifiedByUser).to.eql(pm.environment.get(\"docmodifiedByUser2\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].beginDate).to.eql(pm.environment.get(\"docbeginDate2\"));\r",
											" });\r",
											" pm.test(\"client document begin   date    is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].endDate).to.eql(pm.environment.get(\"docendDate2\"));\r",
											" });\r",
											"pm.test(\"client documentissue dCountry Id   date    is true 2\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocuments[2].issuedCountryId).to.eql(parseInt(pm.environment.get(\"docissuedCountryId2\")));\r",
											" });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect document type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"incorrect document type error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2000,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"1{{1}}20-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty document type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":1,\r\n         \"issuedDate\":\"2020-10-10\",\r\n         \"expiredDate\":\"2050-10-10\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty document id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"document id missing error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n        \r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"1{{1}}20-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty issuing authory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"authority data missing error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n        \r\n         \"issuedDate\":\"1{{1}}20-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "issued date in the future",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"issued date in the future \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Document issued_date shall be\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"2{{1}}29-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty issued date for document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n        \r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "expired date in the past",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"expected date in the past\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Document issued_date shall be\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"1990-10-10\",\r\n         \"expiredDate\":\"1980-10-10\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "expired date before issued date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"expired date befor issued date\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Document issued_date shall be\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"2020-10-10\",\r\n         \"expiredDate\":\"2020-09-09\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty expired date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty expired date \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Document issued_date shall be < expired_date, expired_date shall be > today and issued_date shall be <= today for insert operations\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"2010-10-10\",\r\n\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect issued country id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"incorrect issued id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"2010-10-10\",\r\n         \"expiredDate\":\"2050-10-10\",\r\n         \"issuedCountryId\" : 30000,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty issued countery id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty issued country \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"2010-10-10\",\r\n         \"expiredDate\":\"2050-10-10\",\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFullName}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty created by user id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n \"clientDocuments\":[\r\n      {\r\n         \"documentTypeId\":2,\r\n         \"documentid\":{{$randomInt}},\r\n         \"issuingAuthority\":\"{{$randomInt}}\",\r\n         \"issuedDate\":\"2010-10-10\",\r\n         \"expiredDate\":\"2050-10-10\",\r\n         \"issuedCountryId\" : 3,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty document type Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n            \"documentid\": \"{{$randomInt}}\",\r\n            \"issuingAuthority\": \"{{$randomFullName}}\",\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"modifiedByUser\":\"jjj\",\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n    \r\n   \r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty document id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n             \"documentTypeId\": {{documentTypeId}},\r\n            \"issuingAuthority\": \"{{$randomFullName}}\",\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \r\n    \"clientAddresses\": [],\r\n    \r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty issuen authory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n            \"documentid\": \"{{$randomInt}}\",\r\n             \"documentTypeId\": {{documentTypeId}},\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \r\n    \"clientAddresses\": [],\r\n    \r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty issuen authory Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": 3535,\r\n\t\"internalid\": \"3027494\",\r\n\t\"taxpayerid\": \"1246266838\",\r\n\t\"firstName\": \"Isac\",\r\n\t\"middleName\": \"Terrance\",\r\n\t\"lastName\": \"Altenwerth\",\r\n\t\"fullName\": \"\",\r\n\t\"clientTypeId\": 1,\r\n\t\"genderId\": 2,\r\n\t\"clientStageId\": 1,\r\n\t\"clientLanguageId\": 1,\r\n\t\"birthIncorpDate\": \"1943-10-03T00:00:00\",\r\n\t\"categoryId\": 1,\r\n\t\"maritalStatusId\": 2,\r\n\t\"nationalityId\": 1,\r\n\t\"residentCountryId\": 1,\r\n\t\"branchId\": 1,\r\n\t\"extension1\": null,\r\n\t\"extension2\": null,\r\n\t\"extension3\": null,\r\n\t\"createdByUserId\": \"user\",\r\n\t\"createdDate\": \"2022-04-08T11:55:27\",\r\n\t\"modifiedByUser\": null,\r\n\t\"openDate\": \"2022-04-08T00:00:00\",\r\n\t\"closedDate\": \"3000-01-01T00:00:00\",\r\n\t\"reasonId\": null,\r\n\t\"note\": null,\r\n\t\"isActive\": true,\r\n\t\"isResident\": true,\r\n\t\"isInternational\": false,\r\n\t\"isEmployee\": true,\r\n\t\"isRelated\": false,\r\n\t\"isGovernmental\": false,\r\n\t\"clientAddresses\": [],\r\n\t\"clientDocuments\": [\r\n\t\t{\r\n\t\t\t\"id\": 669,\r\n\t\t\t\"clientId\": 3535,\r\n\t\t\t\"documentTypeId\": 2,\r\n\t\t\t\"documentid\": \"364\",\r\n\t\t\t\"issuingAuthority\": \"642\",\r\n\t\t\t\"issuedDate\": \"1943-10-03T00:00:00\",\r\n\t\t\t\"expiredDate\": \"2043-10-03T00:00:00\",\r\n\t\t\t\"sourceId\": 901,\r\n\t\t\t\"createdDate\": \"2022-04-08T11:55:27\",\r\n\t\t\t\"createdByUserId\": \"Grant Mueller\",\r\n\t\t\t\"modifiedByUser\": null,\r\n\t\t\t\"beginDate\": \"2022-04-08T00:00:00\",\r\n\t\t\t\"endDate\": \"3000-01-01T00:00:00\",\r\n\t\t\t\"issuedCountryId\": 3,\r\n\t\t\t\"reasonId\": null,\r\n\t\t\t\"note\": null,\r\n\t\t\t\"isActive\": true,\r\n\t\t\t\"isDefault\": true\r\n\t\t}\r\n\t],\r\n\t\"clientEmails\": [],\r\n\t\"clientPhones\": [],\r\n\t\"clientSphereOfActivities\": [],\r\n\t\"clientAttributes\": [],\r\n\t\"clientDocumentAdditionals\": [],\r\n\t\"clientRelations\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty document type Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"modifyed by user id is madatory field \", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocuments\": [\r\n        {\r\n            \"id\": {{Docid}},\r\n            \"clientId\": {{clientid}},\r\n            \"documentid\": \"{{$randomInt}}\",\r\n            \"documentTypeId\": {{documentTypeId}},\r\n            \"issuingAuthority\": \"{{$randomFullName}}\",\r\n            \"issuedDate\": \"{{docissuedDate}}\",\r\n            \"expiredDate\": \"{{docexpiredDate}}\",\r\n            \"sourceId\": {{docsourceId}},\r\n            \"createdDate\": \"{{doccreatedDate}}\",\r\n            \"createdByUserId\": \"{{doccreatedByUserId}}\",\r\n            \"issuedCountryId\": {{docissuedCountryId}},\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \r\n    \"clientAddresses\": [],\r\n    \r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client additional document",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client addtional document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":1,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client  addtional document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocumentAdditionals\": [\r\n        {\r\n            \"id\": {{DocumentAdditionalsid}},\r\n            \"clientId\":{{clientid}},\r\n            \"documentTypeId\": {{DocumentAdditionalsiddocumentTypeId}},\r\n            \"sourceId\":\"{{$randomInt}}\",\r\n            \"createdDate\": \"{{DocumentAdditionalsidcreatedDate}}\",\r\n            \"createdByUserId\": \"{{DocumentAdditionalsidcreatedByUserId}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"issuedDate\":\" {{DocumentAdditionalsidissuedDate}}\",\r\n            \"expiredDate\": \"{{DocumentAdditionalsidexpiredDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true\r\n        }\r\n    ],\r\n    \"clientAddresses\": [],\r\n    \r\n   \r\n    \r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n  \r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"client Document Additionals id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].id).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsid\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsiddocumentTypeId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals sourse id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].sourceId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsidsourceId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals created date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdDate).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals created by user    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdByUserId).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals issued date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].issuedDate).to.eql(pm.environment.get(\"DocumentAdditionalsidissuedDate\"));\r",
											" });\r",
											" pm.test(\"client Document Additionals expired  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].expiredDate).to.eql(pm.environment.get(\"DocumentAdditionalsidexpiredDate\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 addtional document",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid1\",idi.clientDocumentAdditionals[1].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId1\",idi.clientDocumentAdditionals[1].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId1\",idi.clientDocumentAdditionals[1].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate1\",idi.clientDocumentAdditionals[1].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId1\",idi.clientDocumentAdditionals[1].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser1\",idi.clientDocumentAdditionals[1].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate1\",idi.clientDocumentAdditionals[1].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate1\",idi.clientDocumentAdditionals[1].expiredDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":1,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n            \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      },\r\n\t {\r\n         \"documentTypeId\":1,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n            \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "2+1 update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsid\",idi.clientDocumentAdditionals[0].id);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsiddocumentTypeId\",idi.clientDocumentAdditionals[0].documentTypeId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidsourceId\",idi.clientDocumentAdditionals[0].sourceId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedDate\",idi.clientDocumentAdditionals[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidcreatedByUserId\",idi.clientDocumentAdditionals[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidmodifiedByUser\",idi.clientDocumentAdditionals[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidissuedDate\",idi.clientDocumentAdditionals[0].issuedDate);\r",
											"postman.setEnvironmentVariable(\"DocumentAdditionalsidexpiredDate\",idi.clientDocumentAdditionals[0].expiredDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n \"clientDocumentAdditionals\": [\r\n        {\r\n            \"id\": {{DocumentAdditionalsid}},\r\n            \"clientId\":{{clientid}},\r\n            \"documentTypeId\": {{DocumentAdditionalsiddocumentTypeId}},\r\n            \"sourceId\":\"{{$randomInt}}\",\r\n            \"createdDate\": \"{{DocumentAdditionalsidcreatedDate}}\",\r\n            \"createdByUserId\": \"{{DocumentAdditionalsidcreatedByUserId}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"issuedDate\":\" {{DocumentAdditionalsidissuedDate}}\",\r\n            \"expiredDate\": \"{{DocumentAdditionalsidexpiredDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true\r\n        },\r\n\r\n\t  {\r\n            \"id\": {{DocumentAdditionalsid1}},\r\n            \"clientId\":{{clientid}},\r\n            \"documentTypeId\": {{DocumentAdditionalsiddocumentTypeId1}},\r\n            \"sourceId\":\"{{$randomInt}}\",\r\n            \"createdDate\": \"{{DocumentAdditionalsidcreatedDate1}}\",\r\n            \"createdByUserId\": \"{{DocumentAdditionalsidcreatedByUserId1}}\",\r\n            \"modifiedByUser\": {{modifedbyuserid}},\r\n            \"issuedDate\":\" {{DocumentAdditionalsidissuedDate1}}\",\r\n            \"expiredDate\": \"{{DocumentAdditionalsidexpiredDate1}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true\r\n        }, \r\n\t  {\r\n         \"documentTypeId\":1,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n            \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n\r\n\r\n ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get document Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"client Document Additionals id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].id).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsid\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals type id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].documentTypeId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsiddocumentTypeId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals sourse id   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].sourceId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsidsourceId\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals created date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdDate).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals created by user    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].createdByUserId).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedByUserId\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals issued date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].issuedDate).to.eql(pm.environment.get(\"DocumentAdditionalsidissuedDate\"));\r",
											" });\r",
											" pm.test(\"client Document Additionals expired  date    is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[0].expiredDate).to.eql(pm.environment.get(\"DocumentAdditionalsidexpiredDate\"));\r",
											" });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"client Document Additionals id   is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].id).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsid1\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals type id   is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].documentTypeId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsiddocumentTypeId1\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals sourse id   is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].sourceId).to.eql(parseInt(pm.environment.get(\"DocumentAdditionalsidsourceId1\")));\r",
											" });\r",
											" pm.test(\"client Document Additionals created date   is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].createdDate).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedDate1\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals created by user    is true1 \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].createdByUserId).to.eql(pm.environment.get(\"DocumentAdditionalsidcreatedByUserId1\"));\r",
											" });\r",
											"  pm.test(\"client Document Additionals issued date    is true1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].issuedDate).to.eql(pm.environment.get(\"DocumentAdditionalsidissuedDate1\"));\r",
											" });\r",
											" pm.test(\"client Document Additionals expired  date    is true 1\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientDocumentAdditionals[1].expiredDate).to.eql(pm.environment.get(\"DocumentAdditionalsidexpiredDate1\"));\r",
											" });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "empty docuemnt type id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":\"\",\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null docuemnt type id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"null value for addtional document id\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid addtional document data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":5000,\r\n         \"sourceId\":{{$randomInt}},\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty source id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":1,\r\n         \"sourceId\":\"\",\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for source id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":\"\",\r\n         \"sourceId\":\"112\",\r\n         \"createdByUserId\":\"\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":\"\",\r\n         \"sourceId\":\"112\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid data for created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\": 2,\r\n         \"sourceId\":\"112\",\r\n         \"createdByUserId\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n         \"issuedDate\": \"201{{2}}-{{mon}}-{{day}}\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty issued date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\" 1,\r\n         \"sourceId\":\"112\",\r\n         \"createdByUserId\":\"test\",\r\n         \"issuedDate\": \"\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "null for issued date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":\"\",\r\n         \"sourceId\":\"112\",\r\n         \"createdByUserId\":\"test\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "issued date in the future",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"empty document type id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user \", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n\r\n  \"clientDocumentAdditionals\":[\r\n      {\r\n         \"documentTypeId\":\"\",\r\n         \"sourceId\":\"112\",\r\n         \"createdByUserId\":\"test\",\r\n         \"issuedDate\": \"\",\r\n         \"expiredDate\":\"20{{1}}{{2}}-{{mon}}-{{day}}\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true\r\n      }\r\n   ]\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client sphare of activity",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client sphare of activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"{{$randomFullName}}\",\r\n   \"clientTypeId\":2,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect type for sphare of activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":1000,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty spahre of activity type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "sphare of activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\"clientSphereOfActivities\": [\r\n        {\r\n            \"id\": {{SphereOfActivitiesid}},\r\n            \"clientId\": {{clientid}},\r\n            \"sphereOfActivityId\": 3,\r\n            \"createdDate\": \"{{SphereOfActivitiescreatedDate}}\",\r\n            \"createdByUserId\": \"{{SphereOfActivitiescreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"beginDate\": \"{{SphereOfActivitiesbeginDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n     \r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n   \r\n    \r\n   \r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "sphare of activity edit sphare of activity id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id );\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesid\",idi.clientSphereOfActivities[0].id);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivities.sphereOfActivityId\",idi.clientSphereOfActivities[0].sphereOfActivityId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedDate\",idi.clientSphereOfActivities[0].createdDate);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiescreatedByUserId\",idi.clientSphereOfActivities[0].createdByUserId);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesmodifiedByUser\",idi.clientSphereOfActivities[0].modifiedByUser);\r",
											"postman.setEnvironmentVariable(\"SphereOfActivitiesbeginDate\",idi.clientSphereOfActivities[0].beginDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n    \"taxpayerid\": \"{{taxpayerid}}\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n\"clientSphereOfActivities\": [\r\n        {\r\n            \"id\": {{SphereOfActivitiesid}},\r\n            \"clientId\": {{clientid}},\r\n            \"sphereOfActivityId\": 30,\r\n            \"createdDate\": \"{{SphereOfActivitiescreatedDate}}\",\r\n            \"createdByUserId\": \"{{SphereOfActivitiescreatedByUserId}}\",\r\n            \"modifiedByUser\":{{modifedbyuserid}},\r\n            \"beginDate\": \"{{SphereOfActivitiesbeginDate}}\",\r\n            \"reasonId\": null,\r\n            \"note\": null,\r\n            \"isActive\": true,\r\n            \"isDefault\": true\r\n        }\r\n    ]\r\n     \r\n \r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "get email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"first name is true\", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.firstName).to.eql(pm.environment.get(\"firstName\"));\r",
											"    });\r",
											"    pm.test(\"middle name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.middleName).to.eql(pm.environment.get(\"middleName\"));\r",
											"    });\r",
											"      pm.test(\"last name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.lastName).to.eql(pm.environment.get(\"lastName\"));\r",
											"    });\r",
											"      pm.test(\"full name is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.fullName).to.eql(pm.environment.get(\"fullName\"));\r",
											"    });\r",
											"      pm.test(\"birthIncorpDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.birthIncorpDate).to.eql(pm.environment.get(\"bday\"));\r",
											"    });\r",
											"      pm.test(\"createdByUserId is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdByUserId).to.eql(pm.environment.get(\"createdByUserId\"));\r",
											"    });\r",
											"        pm.test(\"createdDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.createdDate).to.eql(pm.environment.get(\"createdDate\"));\r",
											"    });\r",
											"        pm.test(\"modifiedByUser is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.modifiedByUser).to.eql(pm.environment.get(\"modifiedByUser\"));\r",
											"    });\r",
											"      pm.test(\"openDate is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.openDate).to.eql(pm.environment.get(\"openDate\"));\r",
											"    });\r",
											"   \r",
											"\r",
											"\r",
											"   pm.test(\"client Sphere Of Activities id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].id).to.eql(parseInt(pm.environment.get(\"SphereOfActivitiesid\")));\r",
											" });\r",
											"   pm.test(\"client Sphere Of Activities created date id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].createdDate).to.eql(pm.environment.get(\"SphereOfActivitiescreatedDate\"));\r",
											" });\r",
											"  pm.test(\"client Sphere Of Activities created by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].createdByUserId).to.eql(pm.environment.get(\"SphereOfActivitiescreatedByUserId\"));\r",
											" });\r",
											" pm.test(\"client Sphere Of Activities modify by user id  is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].modifiedByUser).to.eql(pm.environment.get(\"SphereOfActivitiesmodifiedByUser\"));\r",
											" });\r",
											" pm.test(\"client Sphere Of Activities begin date   is true \", function () {\r",
											"    var ok= pm.response.json();\r",
											"    pm.expect(ok.clientSphereOfActivities[0].beginDate).to.eql(pm.environment.get(\"SphereOfActivitiesbeginDate\"));\r",
											" });\r",
											"\r",
											"\r",
											"   \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients/{{clientid}}?detailLevel=full",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients",
										"{{clientid}}"
									],
									"query": [
										{
											"key": "detailLevel",
											"value": "full"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 same sphare ofactivity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2050-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      },\r\n\t{\r\n         \"sphereOfActivityId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2050-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":false\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "begin date in the future",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":1,\r\n         \"createdByUserId\":\"{{$randomFirstName}}\",\r\n          \"beginDate\": \"2050-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"created by user id is mondatory \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false,\r\n    \"clientSphereOfActivities\":[\r\n     \r\n       {\r\n         \"sphereOfActivityId\":1,\r\n          \"beginDate\": \"2020-10-10\",\r\n         \"reasonId\" : null,\r\n         \"note\" : null, \r\n         \"isActive\":true,\r\n         \"isDefault\":true\r\n      }\r\n   ]\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "AMD account",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client base table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
											"pm.environment.set(\"gender\", _.sample([1,2,3]));\r",
											"pm.environment.set(\"marital\", _.sample([1,2,3,4]));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":{{gender}},\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":{{marital}},\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Current account 10 /2/",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('amd10/2', res.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"10\" ,\r\n    \"clientId\":2,\r\n    \"currencyCode\": \"AMD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Current account 10",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// var res = pm.response.json();\r",
											"// pm.environment.set('amd10', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('amd10', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidamd10', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountName10', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCode', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdate', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"10\" ,\r\n    \"clientId\":1,\r\n    \"currencyCode\": \"AMD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidamd10\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"amd10\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountName10\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCode\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{amd10}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{amd10}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Card account 70",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('amd70', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidamd70', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountName70', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCode70', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdate70', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"10\" ,\r\n    \"clientId\":3,\r\n    \"currencyCode\":\"XUA\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Card account 70 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('amd70/2', res.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"70\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"AMD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidamd70\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"amd70\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountName70\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCode70\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{amd70}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{amd70}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Loan account 02",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('amd02', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidamd02', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountName02', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCode02', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdate02', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"02\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"AMD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidamd02\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"amd02\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountName02\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCode02\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{amd02}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{amd02}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Interest account from loan 03",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('amd03', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidamd03', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountName03', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCode03', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdate03', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"03\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"AMD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidamd03\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"amd03\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountName03\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCode03\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{amd03}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{amd03}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Overdraft acccount 80",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('amd80', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidamd80', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountName80', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCode80', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdate80', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"80\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"AMD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidamd80\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"amd80\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountName80\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCode80\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{amd80}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{amd80}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "USD accounts",
					"item": [
						{
							"name": "_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('Authorization', res.accessToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"access-control-api",
										"v1",
										"tokens",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "client base table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"clientid\",idi.id);\r",
											"postman.setEnvironmentVariable(\"internalid\",idi.internalid);\r",
											"postman.setEnvironmentVariable(\"taxpayerid\",idi.taxpayerid );\r",
											"postman.setEnvironmentVariable(\"firstName\",idi.firstName );\r",
											"postman.setEnvironmentVariable(\"middleName\",idi.middleName );\r",
											"postman.setEnvironmentVariable(\"lastName\",idi.lastName );\r",
											"postman.setEnvironmentVariable(\"fullName\",idi.fullName );\r",
											"postman.setEnvironmentVariable(\"bday\",idi.birthIncorpDate );\r",
											"postman.setEnvironmentVariable(\"createdByUserId\",idi.createdByUserId );\r",
											"postman.setEnvironmentVariable(\"createdDate\",idi.createdDate );\r",
											"postman.setEnvironmentVariable(\"modifiedByUser\",idi.modifiedByUser );\r",
											"postman.setEnvironmentVariable(\"openDate\",idi.openDate);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
										"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n   \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n   \"clientTypeId\":1,\r\n   \"genderId\":2,\r\n   \"clientStageId\":1,\r\n   \"clientLanguageId\":1,\r\n   \"birthIncorpDate\":\"1950-10-10\",\r\n   \"categoryId\":1,\r\n   \"maritalStatusId\":2,\r\n   \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n   \"branchId\":1,\r\n   \"createdByUserId\":\"user\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Current account 10",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('usd10', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidusd10', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountNameusd10', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCodeusd10', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdateusd10', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"10\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"BOB\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : \"bknim\", \r\n    \"reasonId\" : 0\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidusd10\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"usd10\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountNameusd10\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCodeusd10\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{usd10}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{usd10}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Card account 70",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('usd70', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidusd70', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountNameusd70', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCodeusd70', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdateusd70', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"70\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"USD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidusd70\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"usd70\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountNameusd70\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCodeusd70\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{usd70}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{usd70}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Loan account 02",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('usd02', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidusd02', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountNameusd02', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCodeusd02', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdateusd02', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"02\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"USD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidusd02\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"usd02\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountNameusd02\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCodeusd02\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{usd02}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{usd02}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Interest account from loan 03",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('usd03', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidusd03', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountNameusd03', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCodeusd03', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdateusd03', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"03\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"USD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidusd03\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"usd03\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountNameusd03\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCodeusd03\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{usd03}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{usd03}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Overdraft acccount 80",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.environment.set('usd80', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountidusd80', res.accountid);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accountNameusd80', res.accountName);\r",
											"\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('inaccCodeusd80', res.inaccCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('accdateusd80', res.createdDate);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"80\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"USD\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null, \r\n    \"isActive\": true\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"accountid is true \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountid).to.eql(pm.environment.get(\"accountidusd80\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equal(pm.environment.get(\"usd80\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acc name \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.accountName).to.equal(pm.environment.get(\"accountNameusd80\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"inacc is true  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inaccCode).to.equal(pm.environment.get(\"inaccCodeusd80\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts/{{usd80}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"accounts",
										"{{usd80}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "account type",
					"item": [
						{
							"name": "New Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"id\": 0,\r\n    \"description\": \"string\",\r\n    \"closedDate\": \"2022-04-13T10:51:19.790Z\",\r\n    \"isActive\": true\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "_Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var res = pm.response.json();\r",
									"pm.environment.set('Authorization', res.accessToken);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n                \"clientId\": \"core_client\",\r\n                \"clientSecret\": \"secret\",\r\n                \"scope\": \"core_banking\"\r\n             }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/access-control-api/v1/tokens/clients",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"access-control-api",
								"v1",
								"tokens",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "valid acoount",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"rand\", _.sample(['70', '80','10',  '02']));\r",
									"\r",
									"pm.environment.set(\"currency\", _.sample([ 'USD', 'EUR']));\r",
									"\r",
									"//  pm.environment.set(\"clid\", _.sample([ '{{clientforaccount}} '\r",
									"//  ]));\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var res = pm.response.json();\r",
									"pm.environment.set('fcurrency', res.id);\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.environment.set('accountid', res.accountid);\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.environment.set('externalAccountid', res.externalAccountid);\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.environment.set('accountName', res.accountName);\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.environment.set('inaccCode', res.inaccCode);\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.environment.set('accountType', res.accountType);\r",
									"\r",
									"var res = pm.response.json();\r",
									"pm.environment.set('currencyCode', res.currencyCode);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountName\": \"{{$randomBankAccountName}}\",\r\n    \"inaccCode\":\"{{rand}}\" ,\r\n    \"clientId\":\"{{clientid}}\",\r\n    \"currencyCode\": \"BDT\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"note\" : null, \r\n    \"reasonId\" : null,\r\n    \"isActive\": true\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "account update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountid\": \"{{accountid}}\",\r\n    \"externalAccountid\": \"{{externalAccountid}}\",\r\n    \"accountName\": \"{{$randomUserName}}\",\r\n    \"inaccCode\": \"10\",\r\n    \"accountType\": \"A\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\": \"{{$randomFirstName}}\",\r\n    \"signBalance\": null,\r\n    \"reasonId\": null,\r\n    \"note\": null,\r\n    \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/accounts",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"accounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client type",
			"item": [
				{
					"name": "client gender",
					"item": [
						{
							"name": "bulk valid gender type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"// var res = pm.response.json();\r",
											"// pm.environment.set('gentype', res);\r",
											" \r",
											"//  var res = pm.response.json();\r",
											"// pm.environment.set('genid', res[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"description\": \"{{$randomWord}}\"\r\n    } ,{\r\n        \"description\": \"{{$randomWord}}\"\r\n    } ,{\r\n        \"description\": \"{{$randomWord}}\"\r\n    } \r\n]\r\n    ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "single valid gender type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('gentype', res[0].description);\r",
											" \r",
											" var res = pm.response.json();\r",
											"pm.environment.set('genid', res[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"description\": \"{{$randomWord}}\"\r\n    } \r\n]\r\n    ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types/{{genid}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types",
										"{{genid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty gender type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"isActive\": true\r\n    } ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "gender type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(pm.environment.get(\"genid\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "gender type Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[  {\r\n            \"id\": {{genid}},\r\n            \"description\": \"{{$randomWord}}\",\r\n            \"isActive\": false \r\n      }]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "gender type after delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// pm.test(\"Body matches string\", function () {\r",
											"//       pm.expect(pm.response.text()).to.include(pm.environment.get(\"genid\"));\r",
											"// });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/gender-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"gender-types"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client marital status",
					"item": [
						{
							"name": "insert marital status type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('maritaltype', res[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"description\": \"{{$randomLoremWord}}\",\r\n        \"isActive\": true\r\n    } ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "insert marital status without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"isActive\": true\r\n    } ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses/{{maritaltype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses",
										"{{maritaltype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "marital status Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses/4",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "marital status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n            \"createdByUserId\": null,\r\n            \"modifiedByUser\": null,\r\n            \"id\": \"{{maritaltype}}\",\r\n            \"description\": \"{{$randomWord}}\",\r\n            \"isActive\": true\r\n      }]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "close marital status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n            \"id\": {{maritaltype}},\r\n            \"description\": \"{{$randomInt}}{{$randomColor}}\",\r\n            \"isActive\": false\r\n      }]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "after deactivate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/marital-statuses",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"marital-statuses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client type",
					"item": [
						{
							"name": "insert client type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('clienttypeid', res[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"description\": \"{{$randomLoremWord}}\"\r\n\r\n    } ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk insert client type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"description\": \"{{$randomLoremWord}}{{$randomInt}}\"\r\n    },\r\n    {\r\n        \"description\": \"{{$randomLoremWord}}{{$randomInt}}\"\r\n    }\r\n,{\r\n        \"description\": \"{{$randomLoremWord}}{{$randomInt}}\"}]\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "inser client type without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"isActive\": true\r\n    } ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "clent type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-types/{{clienttypeid}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-types",
										"{{clienttypeid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "client type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n            \"id\": \"{{clienttypeid}}\",\r\n            \"description\": \"{{$randomLoremWord}}\",\r\n            \"isActive\": true\r\n      }]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-types"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client category",
					"item": [
						{
							"name": "client category description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('clientcat', res[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n   \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n   \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n},\r\n{\r\n   \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n},{\r\n   \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk with the same data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"duplicate key value violates unique constraint \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n   \"description\": \"aaa\",\r\n  \"isActive\": true\r\n},\r\n{\r\n   \"description\": \"aaa\",\r\n  \"isActive\": true\r\n},{\r\n   \"description\": \"aaa\",\r\n  \"isActive\": true\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk with 1 existing data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"duplicate key value violates unique constraint \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n   \"description\": \"aaa\",\r\n  \"isActive\": true\r\n},\r\n{\r\n   \"description\": \"{{$randomFileName}}\",\r\n  \"isActive\": true\r\n},{\r\n   \"description\": \"{{$randomUserName}}\",\r\n  \"isActive\": true\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "client category without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "client category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories/{{clientcat}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories",
										"{{clientcat}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "client category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"modifyed by user id  is not null\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData[0].modifiedByUser).not.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n      \"id\": 43,\r\n      \"description\": \"{{$randomFirstName}}\",\r\n      \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-categories",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-categories"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client document type",
					"item": [
						{
							"name": "document type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											" \r",
											"\r",
											"\r",
											" var res = pm.response.json();\r",
											"pm.environment.set('doctype', res[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"description\": \"{{$randomLoremWord}}\"\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/document-types/",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"document-types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}, \r\n{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n},\r\n{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/document-types/",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"document-types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "document type without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/document-types/",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"document-types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "document type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/document-types/",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"document-types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/document-types/{{doctype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"document-types",
										"{{doctype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "client document type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n        \"id\": \"{{doctype}}\",\r\n        \"description\": \"{{$randomWord}}\",\r\n        \"isActive\": true\r\n    }   ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/document-types/",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"document-types",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client phone type",
					"item": [
						{
							"name": "phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res  = pm.response.json();\r",
											"pm.environment.set('phonetype' , res[0].id);\r",
											"\r",
											"pm.environment.set('phonedesc', res[0].description)\r",
											"pm.environment.set('phonecreate', res[0].createdByUserId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"description\": \"{{$randomWord}}\"\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"description\": \"{{$randomLoremWord}}{{$randomInt}}\"\r\n},\r\n{\r\n  \"description\": \"{{$randomLoremWord}}{{$randomInt}}\"\r\n},\r\n{\r\n  \"description\": \"{{$randomLoremWord}}{{$randomInt}}\"\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "phone type without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types/",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"      var jsonData = pm.response.json();\r",
											"      pm.expect(jsonData.id).to.eql(pm.environment.get(\"phonetype\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"      var jsonData = pm.response.json();\r",
											"      pm.expect(jsonData.description).to.eql(pm.environment.get(\"phonedesc\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types/{{phonetype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types",
										"{{phonetype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "phone type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res  = pm.response.json();\r",
											"pm.environment.set('phonetype' , res[0].id);\r",
											"\r",
											"pm.environment.set('phonedesc1', res[0].description)\r",
											"pm.environment.set('phonemod', res[0].modifiedByUser);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n      \"id\": \"{{phonetype}}\",\r\n      \"description\": \"{{$randomWord}}\",\r\n      \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id after update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"      var jsonData = pm.response.json();\r",
											"      pm.expect(jsonData.id).to.eql(pm.environment.get(\"phonetype\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"      var jsonData = pm.response.json();\r",
											"      pm.expect(jsonData.description).to.eql(pm.environment.get(\"phonedesc1\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/phone-types/{{phonetype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"phone-types",
										"{{phonetype}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client email type",
					"item": [
						{
							"name": "email type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('emailtype', res[0].id )\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n},\r\n{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n},\r\n{\r\n  \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "email type without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"      pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"isActive\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "email type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(pm.environment.get(\"emailtype\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types/{{emailtype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types",
										"{{emailtype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "email type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											" var res  = pm.response.json();\r",
											" pm.environment.set('emailmodifyed', res.modifiedByUser);\r",
											"\r",
											"\r",
											"pm.test(\"modifyed by user id  is not null\", function () {\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData[0].modifiedByUser).not.eql(null);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n      \"modifiedByUser\": \"gugo\",\r\n      \"id\": 33,\r\n      \"description\": \"{{$randomLoremWord}}\",\r\n      \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id after update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/email-types/{{emailtype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"email-types",
										"{{emailtype}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "client address type",
					"item": [
						{
							"name": "address type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('addtype', res[0].id);\r",
											"pm.environment.set('adddesc', res[0].description);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n \"description\": \"{{$randomLoremWord}}\"\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('addtype', res[0].id);\r",
											"pm.environment.set('adddesc', res[0].description);\r",
											"pm.environment.set('addtype1', res[1].id);\r",
											"pm.environment.set('adddesc1', res[1].description);\r",
											"pm.environment.set('addtype2', res[2].id);\r",
											"pm.environment.set('adddesc2', res[2].description);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}, \r\n{\r\n \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}, {\r\n \"description\": \"{{$randomLoremWord}}\",\r\n  \"isActive\": true\r\n}\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "address type without description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"      pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"      pm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "address type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"adddesc\"))\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"adddesc1\"))\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"adddesc2\"))\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"addtype\"))\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"addtype1\"))\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"addtype2\"))\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"address type id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(pm.environment.get(\"addtype\"));\r",
											"});\r",
											"\r",
											"pm.test(\"address type description is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.description).to.eql(pm.environment.get(\"adddesc\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types/{{addtype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types",
										"{{addtype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "address type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"\r",
											"pm.environment.set('adddesc', res[0].description);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n      \r\n        \"id\": {{addtype}},\r\n        \"description\": \"{{$randomWords}}\",\r\n       \"isActive\": true\r\n    }]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"address type id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(pm.environment.get(\"addtype\"));\r",
											"});\r",
											"\r",
											"pm.test(\"address type description is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.description).to.eql(pm.environment.get(\"adddesc\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types/{{addtype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types",
										"{{addtype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk edit 2/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n\t{\r\n      \r\n        \"id\": {{addtype}},\r\n        \"description\": \"{{$randomWords}} \",\r\n       \"isActive\": true\r\n    },\r\n    {\r\n      \r\n        \"id\": {{addtype1}},\r\n        \"description\": \"{{$randomWords}} \",\r\n       \"isActive\": true\r\n    },{\r\n      \r\n        \"description\": \"{{$randomInt}}{{$randomInt}} \"\r\n    },\r\n    {\r\n      \r\n    \r\n        \"description\": \"{{$randomInt}}{{$randomInt}}\"\r\n    }\r\n    ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/address-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"address-types"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client attribute type",
					"item": [
						{
							"name": "valid attribute type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rand\", _.sample(['1', '2','3',  '4']));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('attributetype', res[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"attributeType\": \"{{$randomFileType}}\",\r\n  \"dataType\": {{rand}},\r\n  \"description\": \"{{$randomLoremWords}}\",\r\n  \"groupId\": {{rand}},\r\n  \"isActive\": true\r\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-attribute-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-attribute-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "get",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rand\", _.sample(['1', '2','3',  '4']));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-attribute-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-attribute-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "by id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rand\", _.sample(['1', '2','3',  '4']));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-attribute-types/{{attributetype}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-attribute-types",
										"{{attributetype}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"// var idi = JSON.parse(responseBody);\r",
											"\r",
											"// postman.setEnvironmentVariable(\"attributeType\",idi.attributeType );\r",
											"\r",
											"// postman.setEnvironmentVariable(\"attributedescription\",idi.description);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n            \"id\": {{attributetype}},\r\n            \"attributeType\": \"{{$randomFileName}}\",\r\n            \"dataType\": {{$randomInt}},\r\n            \"description\": \"sint assumenda voluptatem\",\r\n            \"groupId\": null,\r\n            \"isActive\": false\r\n      }]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/client-attribute-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"client-attribute-types"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "balance date",
					"item": [
						{
							"name": "amd 10",
							"item": [
								{
									"name": "balance date = account created date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"\r",
													"postman.setEnvironmentVariable(\"transidamd10\",idi.transactionId );  \r",
													"\r",
													"postman.setEnvironmentVariable(\"scheduleDate\",idi.scheduleDate );  \r",
													"\r",
													"postman.setEnvironmentVariable(\"debitTransactionIdamd10\",idi.debitTransactionId ); \r",
													"\r",
													"postman.setEnvironmentVariable(\"creditTransactionIdamd10\",idi.creditTransactionId ); \r",
													"\r",
													"postman.setEnvironmentVariable(\"agreementIdamd10\",idi.agreementId ); \r",
													"\r",
													"postman.setEnvironmentVariable(\"useramd10\",idi.createdByUserId ); \r",
													"\r",
													"postman.setEnvironmentVariable(\"amountamd10\",idi.amount ); \r",
													"\r",
													"pm.test(\"debit account  is true\", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.debitAccount).to.eql(pm.environment.get(\"amd10\"));\r",
													"    });\r",
													"\r",
													"    pm.test(\"credit  account  is true\", function () {\r",
													"    var ok= pm.response.json();\r",
													"    pm.expect(ok.creditAccount).to.eql(parseInt(pm.environment.get(\"amdbalanse\")));\r",
													"    });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\":\"2022-03-01\" ,\r\n \"scheduleDate\": \"2022-03-01\",\r\n  \"debitAccount\": 31085930100510016,\r\n  \"creditAccount\":31085930100510024,\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"createdByUserId\": \"{{$randomLastName}}\",\r\n \"agreementId\": {{$randomInt}}\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "amd10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"pm.test(\"debit transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.debitTransactionId).to.eql(parseInt(pm.environment.get(\"debitTransactionIdamd10\")));\r",
													"    });\r",
													"\r",
													"    pm.test(\"credit  transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.creditTransactionId).to.eql(parseInt(pm.environment.get(\"creditTransactionIdamd10\")));\r",
													"    });\r",
													"\r",
													" pm.test(\" transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.transactionId).to.eql(parseInt(pm.environment.get(\"transidamd10\")));\r",
													"    });\r",
													"\r",
													"     pm.test(\" debitAccount  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.debitAccount).to.eql(parseInt(pm.environment.get(\"amd10\")));\r",
													"    });\r",
													"\r",
													"     pm.test(\" credit account is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.creditAccount).to.eql(parseInt(pm.environment.get(\"amdbalanse\")));\r",
													"    });\r",
													"\r",
													"        pm.test(\" amount is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.amount).to.eql(parseInt(pm.environment.get(\"amountamd10\")));\r",
													"    });\r",
													"\r",
													"       pm.test(\" agreementId  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.agreementId ).to.eql(parseInt(pm.environment.get(\"agreementIdamd10\")));\r",
													"    });\r",
													"\r",
													"\r",
													"   pm.test(\" schadule date  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.scheduleDate ).to.eql(pm.environment.get(\"scheduleDate\"));\r",
													"    });\r",
													"\r",
													"\r",
													"        pm.test(\" agreementId  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.agreementId ).to.eql(parseInt(pm.environment.get(\"agreementIdamd10\")));\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/{{transidamd10}}",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions",
												"{{transidamd10}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "amd 10 change note",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"      pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"noteamd10\",idi.note); \r",
													"\r",
													"postman.setEnvironmentVariable(\"modifiedByUseramd10\",idi.modifiedByUser); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2022-03-14T00:00:00\",\r\n      \"scheduleDate\": \"2022-03-14T00:00:00\",\r\n      \"debitAccount\": {{amd10}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amdbalanse}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"2022-03-15T14:49:49\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "change balance date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"nothing happaning \", function () {\r",
													"      pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"noteamd10\",idi.note); \r",
													"\r",
													"postman.setEnvironmentVariable(\"modifiedByUseramd10\",idi.modifiedByUser); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2000-03-14T00:00:00\",\r\n      \"scheduleDate\": \"2022-03-14T00:00:00\",\r\n      \"debitAccount\": {{amd10}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amdbalanse}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"2022-03-15T14:49:49\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "change debit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"nothing happaning \", function () {\r",
													"      pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"noteamd10\",idi.note); \r",
													"\r",
													"postman.setEnvironmentVariable(\"modifiedByUseramd10\",idi.modifiedByUser); \r",
													"postman.setEnvironmentVariable(\"debitAccount1\",idi.debitAccount ); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"scheduleDate\": \"2022-03-14T00:00:00\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amdbalanse}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"2022-03-15T14:49:49\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "amd10 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"pm.test(\"debit transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.debitTransactionId).to.eql(parseInt(pm.environment.get(\"debitTransactionIdamd10\")));\r",
													"    });\r",
													"\r",
													"    pm.test(\"credit  transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.creditTransactionId).to.eql(parseInt(pm.environment.get(\"creditTransactionIdamd10\")));\r",
													"    });\r",
													"\r",
													" pm.test(\" transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.transactionId).to.eql(parseInt(pm.environment.get(\"transidamd10\")));\r",
													"    });\r",
													"\r",
													"     pm.test(\" debitAccount  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.debitAccount).to.eql(parseInt(pm.environment.get(\"debitAccount1\")));\r",
													"    });\r",
													"\r",
													"     pm.test(\" credit account is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.creditAccount).to.eql(parseInt(pm.environment.get(\"amdbalanse\")));\r",
													"    });\r",
													"\r",
													"        pm.test(\" amount is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.amount).to.eql(parseInt(pm.environment.get(\"amountamd10\")));\r",
													"    });\r",
													"\r",
													"       pm.test(\" agreementId  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.agreementId ).to.eql(parseInt(pm.environment.get(\"agreementIdamd10\")));\r",
													"    });\r",
													"\r",
													"  pm.test(\" modify by user id   is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.modifiedByUser ).to.eql(pm.environment.get(\"modifiedByUseramd10\"));\r",
													"    });\r",
													"\r",
													"     pm.test(\"note  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.note ).to.eql(pm.environment.get(\"noteamd10\"));\r",
													"    });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/{{transidamd10}}",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions",
												"{{transidamd10}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "change credit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"nothing happaning \", function () {\r",
													"      pm.response.to.have.status(200);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"noteamd10\",idi.note); \r",
													"\r",
													"postman.setEnvironmentVariable(\"modifiedByUseramd10\",idi.modifiedByUser); \r",
													"postman.setEnvironmentVariable(\"creditAccount1\",idi.creditAccount ); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"scheduleDate\": \"2022-03-14T00:00:00\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{amdbalanse}}\",\r\n      \"creditAccount\": {{amd10}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"2022-03-15T14:49:49\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "amd",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"pm.test(\"debit transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.debitTransactionId).to.eql(parseInt(pm.environment.get(\"debitTransactionIdamd10\")));\r",
													"    });\r",
													"\r",
													"    pm.test(\"credit  transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.creditTransactionId).to.eql(parseInt(pm.environment.get(\"creditTransactionIdamd10\")));\r",
													"    });\r",
													"\r",
													" pm.test(\" transcation  id  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.transactionId).to.eql(parseInt(pm.environment.get(\"transidamd10\")));\r",
													"    });\r",
													"\r",
													"     pm.test(\" debitAccount  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.debitAccount).to.eql(parseInt(pm.environment.get(\"amd10/2\")));\r",
													"    });\r",
													"\r",
													"     pm.test(\" credit account is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.creditAccount).to.eql(parseInt(pm.environment.get(\"creditAccount1\")));\r",
													"    });\r",
													"\r",
													"        pm.test(\" amount is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.amount).to.eql(parseInt(pm.environment.get(\"amountamd10\")));\r",
													"    });\r",
													"\r",
													"       pm.test(\" agreementId  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.agreementId ).to.eql(parseInt(pm.environment.get(\"agreementIdamd10\")));\r",
													"    });\r",
													"\r",
													"  pm.test(\" modify by user id   is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.modifiedByUser ).to.eql(pm.environment.get(\"modifiedByUseramd10\"));\r",
													"    });\r",
													"\r",
													"     pm.test(\"note  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.note ).to.eql(pm.environment.get(\"noteamd10\"));\r",
													"    });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/{{transidamd10}}",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions",
												"{{transidamd10}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "balance date >current date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"2025-02-09\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\": {{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"string\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "balance date > account create date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"2000-01-20T14:56:00.130Z\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "incorrect balance date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"1000-10-10\",\r\n  \"debitAccount\": {{amd10/2}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty balance date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "balance date < current date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"2022-01-19T14:56:00.130Z\",\r\n  \"debitAccount\":{{amd10/2}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "schedule date = current date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var idi = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"scheduleDate\",idi.scheduleDate );  \r",
													" \r",
													"postman.setEnvironmentVariable(\"transactionId\",idi.transactionId );  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"2022-03-09\",\r\n  \"scheduleDate\": \"2022-03-16\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "valid balance date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"      pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/{{transactionId}}",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions",
												"{{transactionId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "valid schedule date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"schedule date  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.scheduleDate).to.eql(\"2000-03-14T00:00:00\");\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"scheduleDate\": \"2000-03-14\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amd10}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"{{accdate}}\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "valid balance date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"schedule date  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.scheduleDate).to.eql(\"2000-03-14T00:00:00\");\r",
													"    });\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"      pm.response.to.have.status(200);\r",
													"});   "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/{{transactionId}}",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions",
												"{{transactionId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "schadule date before account create",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{accdate}}\",\r\n  \"scheduleDate\": \"2000-10-10\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid date for schedule date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{accdate}}\",\r\n  \"scheduleDate\": \"1000-10-10\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty schedule date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{accdate}}\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "incorrect schedule date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{accdate}}\",\r\n  \"scheduleDate\": \"aaa\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid schedule date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"schedule date  is true \", function () {\r",
													"    var ok= pm.response.json();\r",
													"pm.expect(ok.scheduleDate).to.eql(\"1000-03-14T00:00:00\");\r",
													"    });\r",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"scheduleDate\": \"1000-03-14\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amd10}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"{{accdate}}\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "schedule date in the future",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"      pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"scheduleDate\": \"3000-03-14\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amd10}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"{{accdate}}\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "shcedule date before account created  date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"      pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"scheduleDate\": \"2000-03-14\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amd10}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"{{accdate}}\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty schedule date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Authorization}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n      \"debitTransactionId\": {{debitTransactionIdamd10}},\r\n      \"creditTransactionId\": {{creditTransactionIdamd10}},\r\n      \"transactionId\": {{transidamd10}},\r\n      \"balanceDate\": \"2020-03-14T00:00:00\",\r\n      \"debitAccount\": {{amd10/2}},\r\n      \"createdByUserId\": \"{{useramd10}}\",\r\n      \"creditAccount\": {{amd10}},\r\n      \"amount\": {{amountamd10}},\r\n      \"currency\": \"AMD\",\r\n      \"exchangeRate\": 1.0000,\r\n      \"exchangeRateDate\": \"2022-03-14T00:00:00\",\r\n      \"transactionType\": \"1\",\r\n      \"createdDate\": \"{{accdate}}\",\r\n      \"note\": \"{{$randomLoremWords}}\",\r\n      \"agreementId\": {{agreementIdamd10}},\r\n      \"modifiedByUser\": \"{{$randomFullName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "debit account",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid credit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDU0MjcxNjUsImV4cCI6MTY0ODAxOTE2NSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1NDI3MTY1LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.rWQIfzuzE9S3o_1BJHeAcJXZAvh_UEpufnvl6X7Ybn1I5pA-03ats-1KzPC0x06ST33KxD35_9yZK64nhLncD8zS9KMClgJ_iZuF0T0I5rtqPEayKNXSQ2b2K_TUax2Tyib3UXEb0eNXTWdlLSGUWO5eawVukfdEFCakNcUo5V7GLWB0on4ceIrHaqYPrVNtoBV1-Qrx5qh1d41oVrIiHkpW7s5YwAsowXvPFZzDWYR2hO9DhOknAXIeyw-HsBIq5e4OPnnme1QCpWbmBs6igdHFXLU8LoD-9GdX1AMAseaz6WkX7Vkn0RZNChzLJFvlAPsDjqPSxr3NBENttBa-6A",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{createdDate}}\",\r\n  \"debitAccount\": {{amd10}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid debit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDU0MjcxNjUsImV4cCI6MTY0ODAxOTE2NSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1NDI3MTY1LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.rWQIfzuzE9S3o_1BJHeAcJXZAvh_UEpufnvl6X7Ybn1I5pA-03ats-1KzPC0x06ST33KxD35_9yZK64nhLncD8zS9KMClgJ_iZuF0T0I5rtqPEayKNXSQ2b2K_TUax2Tyib3UXEb0eNXTWdlLSGUWO5eawVukfdEFCakNcUo5V7GLWB0on4ceIrHaqYPrVNtoBV1-Qrx5qh1d41oVrIiHkpW7s5YwAsowXvPFZzDWYR2hO9DhOknAXIeyw-HsBIq5e4OPnnme1QCpWbmBs6igdHFXLU8LoD-9GdX1AMAseaz6WkX7Vkn0RZNChzLJFvlAPsDjqPSxr3NBENttBa-6A",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{createdDate}}\",\r\n  \"debitAccount\": 1000,\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "different debit account - currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"var res = pm.response.json();\r",
													"pm.environment.set('ftoamdtrid', res.transactionId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDU0MjcxNjUsImV4cCI6MTY0ODAxOTE2NSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1NDI3MTY1LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.rWQIfzuzE9S3o_1BJHeAcJXZAvh_UEpufnvl6X7Ybn1I5pA-03ats-1KzPC0x06ST33KxD35_9yZK64nhLncD8zS9KMClgJ_iZuF0T0I5rtqPEayKNXSQ2b2K_TUax2Tyib3UXEb0eNXTWdlLSGUWO5eawVukfdEFCakNcUo5V7GLWB0on4ceIrHaqYPrVNtoBV1-Qrx5qh1d41oVrIiHkpW7s5YwAsowXvPFZzDWYR2hO9DhOknAXIeyw-HsBIq5e4OPnnme1QCpWbmBs6igdHFXLU8LoD-9GdX1AMAseaz6WkX7Vkn0RZNChzLJFvlAPsDjqPSxr3NBENttBa-6A",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"{{createdDate}}\",\r\n  \"debitAccount\": {{fcurrency}},\r\n  \"creditAccount\":{{amdbalanse}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"USD\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n  \"createdByUserId\": \"user\",\r\n  \"note\": \"string\",\r\n \"agreementId\": 1\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty debit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDU0MjcxNjUsImV4cCI6MTY0ODAxOTE2NSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1NDI3MTY1LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.rWQIfzuzE9S3o_1BJHeAcJXZAvh_UEpufnvl6X7Ybn1I5pA-03ats-1KzPC0x06ST33KxD35_9yZK64nhLncD8zS9KMClgJ_iZuF0T0I5rtqPEayKNXSQ2b2K_TUax2Tyib3UXEb0eNXTWdlLSGUWO5eawVukfdEFCakNcUo5V7GLWB0on4ceIrHaqYPrVNtoBV1-Qrx5qh1d41oVrIiHkpW7s5YwAsowXvPFZzDWYR2hO9DhOknAXIeyw-HsBIq5e4OPnnme1QCpWbmBs6igdHFXLU8LoD-9GdX1AMAseaz6WkX7Vkn0RZNChzLJFvlAPsDjqPSxr3NBENttBa-6A",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n // \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/account",
											"protocol": "https",
											"host": [
												"test-core",
												"highwaybaas",
												"com"
											],
											"path": [
												"core-clients-api",
												"v1",
												"account"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "equal currency account",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 80,\r\n  \"creditAccount\": 79,\r\n  \"amount\": 8700,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 81,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "different currency account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 56,\r\n  \"creditAccount\": 80,\r\n  \"amount\": 5000,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 81,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "same account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 79,\r\n  \"creditAccount\": 79,\r\n  \"amount\": 5,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 81,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty debit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n // \"debitAccount\": 79,\r\n  \"creditAccount\": 80,\r\n  \"amount\": 5000,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 81,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid debit account",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 7900,\r\n  \"creditAccount\": 80,\r\n  \"amount\": 500550,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 81,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "credit account",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid credit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "different debit credit accounts",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\": 13,\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"USD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid credit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\": 3900,\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty credit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n//  \"creditAccount\": 39,\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "equal currency account",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 84,\r\n  \"creditAccount\": 83,\r\n  \"amount\": 90000,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 82,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "different currency account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 79,\r\n  \"creditAccount\": 84,\r\n  \"amount\": 90000,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 82,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty credit account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 83,\r\n // \"creditAccount\": 84,\r\n  \"amount\": 907700,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 82,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid credit account",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 83,\r\n  \"creditAccount\": 11111,\r\n  \"amount\": 90000,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 82,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "same account",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 83,\r\n  \"creditAccount\": 83,\r\n  \"amount\": 90000,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 82,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "amount",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid amount",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\": 39,\r\n  \"amount\":1000,\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "amount  = 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\": {{amd2}},\r\n  \"amount\":0,\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "amount with -",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\": {{amd2}},\r\n  \"amount\":5000,\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\": 39,\r\n // \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "valid amount",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "zero for amount",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 0,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "negative value for amount",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": -866,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty amount",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 0,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "commented line",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n // \"amount\": 4,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 4500 a,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "currency",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"aaa\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "different currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"USD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n // \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "valid currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "different currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Shoews validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"USD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"All\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty currency",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "commented line",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shoes validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n //\"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "transaction id",
					"item": [
						{
							"name": "valid transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "incorrect transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"shows validationn error \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"AMD\",\r\n  \"transactionId\": 78000,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"shows validation error \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 38,\r\n  \"creditAccount\":33,\r\n  \"amount\": 4,\r\n \"currency\": \"AMD\",\r\n//  \"transactionId\": ,\r\n  //\"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "exchange rate",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid exchage rate",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 300,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid exchange rate",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "negative value for exchange rate",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": -8500,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty exchange rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n // \"exchangeRate\": ,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "valid exchange rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  \"exchangeRate\": 230,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid exchange rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  \"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "negative exchange rate",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n\"exchangeRate\": -50,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty exchange rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n//   \"exchangeRate\": 0,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "exchange rate date",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid exchange rate date",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 333,\r\n  \"exchangeRateDate\": \"2022-01-31\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "exchange rate date in the future",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 300,\r\n \"exchangeRateDate\": \"2022-12-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "exchange rate in the past",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 300,\r\n \"exchangeRateDate\": \"1960-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty exchange rate",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": \"2022-01-31\",\r\n  \"scheduleDate\": \"2022-03-31\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":33,\r\n  \"amount\":550,\r\n  \"currency\": \"EUR\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 300,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"jutik\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "valid exchange rate date",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  \"exchangeRate\": 230,\r\n  \"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "exchange rate date in the future",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shwos validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  \"exchangeRate\": 230,\r\n  \"exchangeRateDate\": \"2050-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "exchange rate date in the past",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  \"exchangeRate\": 230,\r\n  \"exchangeRateDate\": \"1940-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty exchange rate date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"balanceDate\": \"2022-01-20\",\r\n  \"scheduleDate\": \"2022-01-20\",\r\n  \"debitAccount\": 85,\r\n  \"creditAccount\":86,\r\n  \"amount\": 780,\r\n \"currency\": \"EUR\",\r\n  \"transactionId\": 73,\r\n  \"exchangeRate\": 230,\r\n  //\"exchangeRateDate\": \"2022-01-26T10:06:03.465Z\",\r\n//   \"transactionType\": \"string\",\r\n//   \"transactionSubtype\": 0,\r\n//   \"externalId\": \"string\",\r\n   \"createdByUserId\": \"string\",\r\n           \"modifiedByUser\": \"oko\",\r\n\r\n  \"createdDate\": \"2022-01-26T10:06:03.465Z\"\r\n//   \"note\": \"string\",\r\n//   \"reversalEntryKey\": 0,\r\n//   \"extension1\": \"string\",\r\n//   \"extension2\": \"string\",\r\n // \"extension3\": \"string\",\r\n // \"agreementId\": 0,\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "transaction type",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid transaction type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invali dtransaction type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 10000,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty transaction type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  //\"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "valid transaction type",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid transaction type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3000000,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n   \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty transaction type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n  //  \"transactionType\": 3,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "transaction subtype",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid transaction type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid transaction subtype",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 10000,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty transaction type / if it inpossible /",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Sshows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty transaction type if it coult be empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  //\"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "valid transaction subtype",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n    \"transactionSubtype\": 2,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid transaction subtype",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 300000,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty transaction subtype",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n  //  \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "external id",
					"item": []
				},
				{
					"name": "created by user id",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid created by user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid created by user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": aaa,\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Authorization}}",
											"host": [
												"{{Authorization}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty created by user id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n // \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PUT",
							"item": [
								{
									"name": "chenge created by user id",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"uaaaa\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ptr}}",
											"host": [
												"{{ptr}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "modifed by user",
					"item": []
				},
				{
					"name": "created date",
					"item": [
						{
							"name": "chenge created date",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2050-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 59\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "note",
					"item": []
				},
				{
					"name": "reversal entery key",
					"item": []
				},
				{
					"name": "agreement",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "valid agreement id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "invalid agreemet id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shwos validation error \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 10000\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "empty agreement id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"shows validation error\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"balanceDate\": {{balancedate}},\r\n  \"scheduleDate\": {{balancedate}},\r\n  \"debitAccount\": {{amd1}},\r\n  \"creditAccount\":{{amd2}},\r\n  \"amount\":{{$randomInt}},\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n//  \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"user\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n //\"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post}}transactions",
											"host": [
												"{{post}}transactions"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "debit tansaction id",
					"item": [
						{
							"name": "valid debit transaction id",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 1000,\r\n    \"creditTransactionId\": 59\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "credit transaction id",
					"item": [
						{
							"name": "chenge credit transaction id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"shwos validation error \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"balanceDate\": \"2022-01-20T00:00:00\",\r\n    \"scheduleDate\": \"2022-01-20T00:00:00\",\r\n    \"debitAccount\": 5,\r\n    \"creditAccount\": 7,\r\n    \"amount\": 4500.00,\r\n    \"currency\": \"AMD\",\r\n    \"transactionId\": 30,\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-01-20T00:00:00\",\r\n    \"transactionType\": 3,\r\n    \"transactionSubtype\": 1,\r\n    \"createdByUserId\": \"user\",\r\n    \"createdDate\": \"2022-01-31T13:47:47\",\r\n    \"note\": \"string\",\r\n    \"agreementId\": 1,\r\n    \"debitTransactionId\": 58,\r\n    \"creditTransactionId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ptr}}",
									"host": [
										"{{ptr}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET transactions",
					"item": [
						{
							"name": "get transaction",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/281",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"transactions",
										"281"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "valid transaction",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"balanceDate\": \"2022-02-01\",\r\n  \"scheduleDate\": \"2022-02-01\",\r\n  \"debitAccount\":8,\r\n  \"creditAccount\":9,\r\n  \"amount\": 100,\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 1,\r\n  \"exchangeRate\": 700,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n  \"transactionSubtype\": 1,\r\n // \"externalId\": \"string\",\r\n  \"createdByUserId\": \"string\",\r\n // \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 22,\r\n \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{post}}trasactions",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"balanceDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"scheduleDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"debitAccount\": 7,\r\n  \"creditAccount\": 8,\r\n  \"amount\": 500,\r\n  \"currency\": \"AMD\",\r\n  //\"transactionId\": 0,\r\n // \"exchangeRate\": 0,\r\n // \"exchangeRateDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"transactionType\": 1,\r\n // \"transactionSubtype\": 0,\r\n  //\"externalId\": \"string\",\r\n  \"createdByUserId\": \"koko\",\r\n//  \"createdDate\": \"2022-01-17T14:56:00.130Z\",\r\n  \"note\": \"string\",\r\n // \"reversalEntryKey\": 0,\r\n  \"agreementId\": 1\r\n // \"debitTransactionId\": 0,\r\n // \"creditTransactionId\": 0\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{post}}trasactions",
							"host": [
								"{{post}}trasactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{put}}",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 254,\r\n    \"internalid\": \"17124338\",\r\n    \"taxpayerid\": \"1243594752\",\r\n    \"firstName\": \"Emile\",\r\n    \"middleName\": \"Rose\",\r\n    \"lastName\": \"Padberg\",\r\n    \"fullName\": \"Emile Rose Padberg\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"1960-06-21T00:00:00\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 2,\r\n    \"branchId\": 1,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"createdByUserId\": \"ada\",\r\n    \"createdDate\": \"2022-01-19T12:43:38\",\r\n    \"modifiedByUser\": null,\r\n    \"closedDate\": \"2022-01-19T00:00:00\",\r\n    \"reasonId\": 2,\r\n  //  \"note\": null,\r\n    \"isActive\": false,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{put}}",
							"host": [
								"{{put}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "valid transaction AMD",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "get transaction",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions/6",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"transactions",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "get account balance",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/account/balance/52?date=2022-02-09",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"account",
								"balance",
								"52"
							],
							"query": [
								{
									"key": "date",
									"value": "2022-02-09"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete transaction",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"debitTransactionId\": 10,\r\n    \"creditTransactionId\": 11,\r\n    \"transactionId\": 6,\r\n    \"balanceDate\": \"2022-02-01T00:00:00\",\r\n    \"scheduleDate\": \"2022-02-01T00:00:00\",\r\n    \"debitAccount\": 8,\r\n    \"createdByUserId\": \"string\",\r\n    \"creditAccount\": 9,\r\n    \"amount\": 100.00,\r\n    \"currency\": \"AMD\",\r\n    \"exchangeRate\": 1.0000,\r\n    \"exchangeRateDate\": \"2022-02-01T00:00:00\",\r\n    \"transactionType\": \"1\",\r\n    \"transactionSubtype\": 1,\r\n    \"externalId\": null,\r\n    \"createdDate\": \"2022-02-21T14:42:40\",\r\n    \"note\": \"string\",\r\n    \"reversalEntryKey\": null,\r\n    \"extension1\": null,\r\n    \"extension2\": null,\r\n    \"extension3\": null,\r\n    \"agreementId\": 1,\r\n    \"modifiedByUser\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/transactions",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"transactions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "exchange rate",
			"item": [
				{
					"name": "date",
					"item": [
						{
							"name": "valid date in the future",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "existing rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"startDate\": \"2050-12-27T00:00:00\",\r\n\t\"rateTypeCode\": \"CASH\",\r\n\t\"currencyCode\": \"ZMW\",\r\n\t\"unit\": 1,\r\n\t\"buyRate\": 252.0000000000,\r\n\t\"sellRate\": 300.0000000000,\r\n\t\"createdByUserId\": \"Ignacio\"\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "sysdate for start date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"currencyid\",idi.id);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "date in the past",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"hint \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Please provide start date time for new exchange rate which is greater or equal to current date time\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\":\"2022-04-07\",\r\n\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName }}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid start date \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Could not convert string to DateTime\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"2024-31-02\",\r\n  \"endDate\": \"2022-03-09T07:02:27.176Z\",\r\n  \"rateTypeCode\": \"Regulator\",\r\n  \"currencyCode\": \"USD\",\r\n  \"unit\": 1,\r\n  \"buyRate\": 500,\r\n  \"sellRate\": 500,\r\n  \"createdByUserId\": \"Admin\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "end date",
					"item": [
						{
							"name": "valid date in the future",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"203{{1}}-{{mon}}-{{day}}\",\r\n \"endDate\": \"2023-04-08\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "rate type code",
					"item": [
						{
							"name": "valid rate type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid rate type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"invalid rate type error\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"test\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for rate type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"null value for rate type \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"null value in column\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty value for rate type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"empty value for rate type \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "currency code",
					"item": [
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid currency code \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Wrong currency is provided during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"test\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid currency code",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDU0MjcxNjUsImV4cCI6MTY0ODAxOTE2NSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1NDI3MTY1LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.rWQIfzuzE9S3o_1BJHeAcJXZAvh_UEpufnvl6X7Ybn1I5pA-03ats-1KzPC0x06ST33KxD35_9yZK64nhLncD8zS9KMClgJ_iZuF0T0I5rtqPEayKNXSQ2b2K_TUax2Tyib3UXEb0eNXTWdlLSGUWO5eawVukfdEFCakNcUo5V7GLWB0on4ceIrHaqYPrVNtoBV1-Qrx5qh1d41oVrIiHkpW7s5YwAsowXvPFZzDWYR2hO9DhOknAXIeyw-HsBIq5e4OPnnme1QCpWbmBs6igdHFXLU8LoD-9GdX1AMAseaz6WkX7Vkn0RZNChzLJFvlAPsDjqPSxr3NBENttBa-6A",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"2022-01-20T08:02:27.176Z\",\r\n  \"endDate\": \"2022-03-09T07:02:27.176Z\",\r\n  \"rateTypeCode\": \"Regulator\",\r\n  \"currencyCode\": \"aaa\",\r\n  \"unit\": 1,\r\n  \"buyRate\": 500,\r\n  \"sellRate\": 500,\r\n  \"createdByUserId\": \"Admin\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"null value for currency code \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Required currency_code field is missing during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty value for currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"null value for currency code \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Wrong currency is provided during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "unit",
					"item": [
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "0 for unit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"zero for unit \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Exchange rate unit can not be negative or equal to zero during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 0,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "negative value for unit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"zero for unit \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Exchange rate unit can not be negative or equal to zero during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": -10,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.5 for unit Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"zero for unit \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Input string '0.5' is not a valid integer\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 0.5,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty value for unit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty value for unit inserted by 1 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.unit).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": \"\",\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for unit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"null value for unit inserted by 1\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.unit).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "buy rate",
					"item": [
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "0 buy rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"zero for buy rate \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Exchange rate can not be negative or equal to zero during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": 0,\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "negative value for buy rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"zero for buy rate \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Exchange rate can not be negative or equal to zero during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": -10,\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty value for buy rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"empty buy rate equel sell rate \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.buyRate).to.eql(600);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": \"\",\r\n  \"sellRate\": 600,\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for buy rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"empty buy rate equel sell rate \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.buyRate).to.eql(600);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"sellRate\": 600,\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "sell rate",
					"item": [
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"endDate \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.endDate).to.equal(\"3000-01-01T00:00:00\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "0 value for sell rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"0 v alue for sell rate \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Exchange rate can not be negative or equal to zero during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": 0,\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "negative value for sell rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"0 v alue for sell rate \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Exchange rate can not be negative or equal to zero during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": -50,\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty value for sell rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty value for sell rate\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.sellRate).to.eql(250);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": 250,\r\n  \"sellRate\":\"\",\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for sell rate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));\r",
											"\r",
											"\r",
											"pm.environment.set(\"unit\", _.sample([1,100,1000]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"empty value for sell rate\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.sellRate).to.eql(250);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": {{unit}},\r\n  \"buyRate\": 250,\r\n  \"createdByUserId\": \"{{$randomFirstName}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "created by user id",
					"item": [
						{
							"name": "valid rate type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"// var res = pm.response.json();\r",
											"// pm.environment.set('curid', res.id); \r",
											"\r",
											"// pm.test(\"startDate \", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData.startDate).to.equal(\"2050-12-20T00:00:00\");\r",
											"\r",
											"// });\r",
											"\r",
											"\r",
											"pm.test(\"cretaed by user id  \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.createdByUserId).to.equal(\"admin\");\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"admin\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "exchange rate Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"currencyid\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid created by user id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid value for created by user id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty created by user id value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid value for created by user id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}},\r\n  \"createdByUserId\": \"\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						},
						{
							"name": "null value for creared by user id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"rate\", _.sample(['Cash','Non-cash','Online' ]));\r",
											"\r",
											"pm.environment.set (\"cur\" , _.sample([150, 200, 250, 251,252, 253, 254, 255, 256,257,258,259,260]));\r",
											"\r",
											"pm.environment.set (\"cur2\" , _.sample([300,310,320,30,340,350,360,370,380,390,400]));\r",
											"\r",
											"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
											"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
											"\r",
											"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9,0]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid value for created by user id \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Required created_by_user_id field is missing during exchange rate creation process\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n\"startDate\": \"205{{1}}-{{mon}}-{{day}}\",\r\n  \"rateTypeCode\": \"{{rate}}\",\r\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\r\n  \"unit\": 1,\r\n  \"buyRate\": {{cur}},\r\n  \"sellRate\": {{cur2}}\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/exchange-rates",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"exchange-rates"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "inacc type",
			"item": [
				{
					"name": "inacc code",
					"item": [
						{
							"name": "valid inacc code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"inacccode\",idi[0].inaccCode);\r",
											"postman.setEnvironmentVariable(\"inaccname\",idi[0].inaccName);\r",
											"postman.setEnvironmentVariable(\"signBalanceID\",idi[0].signBalance.id);\r",
											"postman.setEnvironmentVariable(\"accTypeid\",idi[0].accountType.id);\r",
											"postman.setEnvironmentVariable(\"cbuid\",idi[0].createdByUserId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty inacc code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "null for inacc  code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "existing inacc code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": 109,\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "negative value for inacc code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"-109\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid char for inacc code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\":\"6p\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "get inacc by inaccCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"created by user \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.createdByUserId).to.eql(\"Core_User\");\r",
											"});\r",
											"\r",
											"pm.test(\"inacc name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.inaccName).to.eql(pm.environment.get(\"inaccname\"));\r",
											"\t\r",
											"});\r",
											"\r",
											"pm.test(\"account type is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.accountType.id).to.eql(parseInt(pm.environment.get('accTypeid')));\r",
											"\t\r",
											"});\r",
											"\r",
											"pm.test(\"sign balance is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.signBalance.id).to.eql(parseInt(pm.environment.get(\"signBalanceID\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types/{{inacccode}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types",
										"{{inacccode}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get invalid inacc code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"created by user \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.createdByUserId).to.eql(\"Core_User\");\r",
											"});\r",
											"\r",
											"pm.test(\"inacc name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.inaccName).to.eql(pm.environment.get(\"inaccname\"));\r",
											"\t\r",
											"});\r",
											"\r",
											"pm.test(\"account type is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.accountType.id).to.eql(parseInt(pm.environment.get('accTypeid')));\r",
											"\t\r",
											"});\r",
											"\r",
											"pm.test(\"sign balance is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.signBalance.id).to.eql(parseInt(pm.environment.get(\"signBalanceID\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types/25548",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types",
										"25548"
									]
								}
							},
							"response": []
						},
						{
							"name": "update inacc code with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"96864{{$randomInt}}\",\r\n    \"inaccName\": \"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty inacc code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"\",\r\n    \"inaccName\": \"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid inacc code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"rt\",\r\n    \"inaccName\": \"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty inacc name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":{{inacccode}},\r\n    \"inaccName\":\"\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "negative inacc code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"-8\",\r\n    \"inaccName\":\"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all inacc types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "get account types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"id = 65\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].id).to.eql(65);\r",
											"});\r",
											"pm.test(\"name = 'Asset'\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].name).to.eql(\"Asset\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"id = 76\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].id).to.eql(76);\r",
											"});\r",
											"pm.test(\"name = 'Liability'\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].name).to.eql(\"Liability\");\r",
											"});\r",
											"\r",
											"pm.test(\"id = 79\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[2].id).to.eql(79);\r",
											"});\r",
											"pm.test(\"name = 'Other'\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[2].name).to.eql(\"Other\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types/account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types",
										"account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "get sign balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"id = 66\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].id).to.eql(66);\r",
											"});\r",
											"pm.test(\"name = 'Both'\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].name).to.eql(\"Both\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"id = 80\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].id).to.eql(80);\r",
											"});\r",
											"pm.test(\"name = 'Positive'\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].name).to.eql(\"Positive\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"id = 78\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[2].id).to.eql(78);\r",
											"});\r",
											"pm.test(\"name = 'Positive'\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[2].name).to.eql(\"Negative\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types/balance-signs",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types",
										"balance-signs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "inacc name",
					"item": [
						{
							"name": "valid inacc name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"inacccode\",idi[0].inaccCode);\r",
											"postman.setEnvironmentVariable(\"inaccname\",idi[0].inaccName);\r",
											"postman.setEnvironmentVariable(\"signBalanceID\",idi[0].signBalance.id);\r",
											"postman.setEnvironmentVariable(\"accTypeid\",idi[0].accountType.id);\r",
											"postman.setEnvironmentVariable(\"cbuid\",idi[0].createdByUserId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid inacc name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"error message for long name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "null for inacc name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"error message for long name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "existing inacc name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"error message for long name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"Indexing\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty inacc name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"error message for long name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid inacc name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"{{inacccode}}\",\r\n    \"inaccName\": \"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid inacc name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"error message for long inacc name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"{{inacccode}}\",\r\n    \"inaccName\": \"ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty inacc name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"error message for long inacc name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"{{inacccode}}\",\r\n    \"inaccName\": \"\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "null for inacc name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"error message for long inacc name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"value too long for type character varying(50)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"{{inacccode}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accTypeid}},\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "account type",
					"item": [
						{
							"name": "valid account type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"inacccode\",idi[0].inaccCode);\r",
											"postman.setEnvironmentVariable(\"inaccname\",idi[0].inaccName);\r",
											"postman.setEnvironmentVariable(\"signBalanceID\",idi[0].signBalance.id);\r",
											"postman.setEnvironmentVariable(\"accTypeid\",idi[0].accountType.id);\r",
											"postman.setEnvironmentVariable(\"cbuid\",idi[0].createdByUserId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid account type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": 50,\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty account type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\":\"\",\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "null for accout type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "chenge account type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"{{inacccode}}\",\r\n    \"inaccName\": \"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": 20,\r\n    \"signBalance\": {{signBalanceID}}\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "sign balance",
					"item": [
						{
							"name": "valid sign balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"inacccode\",idi[0].inaccCode);\r",
											"postman.setEnvironmentVariable(\"inaccname\",idi[0].inaccName);\r",
											"postman.setEnvironmentVariable(\"signBalanceID\",idi[0].signBalance.id);\r",
											"postman.setEnvironmentVariable(\"accTypeid\",idi[0].accountType.id);\r",
											"postman.setEnvironmentVariable(\"cbuid\",idi[0].createdByUserId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":{{signB}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid sign balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":10\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty sign balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}},\r\n  \"signBalance\":\"\"\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "null sign balance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"accType\", _.sample([65, 76, 79]));\r",
											"\r",
											"pm.environment.set(\"signB\", _.sample([66, 80,78]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\r\n  \"inaccCode\": \"{{$randomInt}}\",\r\n  \"inaccName\": \"{{$randomFirstName}}\",\r\n  \"accountType\": {{accType}}\r\n}] ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "change sign balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"inaccCode\":\"{{inacccode}}\",\r\n    \"inaccName\": \"{{$randomWord}}\",\r\n    \"isActive\": true,\r\n    \"accountType\": {{accType}},\r\n    \"signBalance\": 10\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/internal-account-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"internal-account-types"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "operating currency",
			"item": [
				{
					"name": "post put delete",
					"item": [
						{
							"name": "all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/currencies/all",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"currencies",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "get operetaing currency",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCode', res.currencyCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCodeid', res.id);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyNumber', res.currencyNumber);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "currencyNumber",
										"value": "408",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currencyNumber\": 600\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies/{{currencyCodeid}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies",
										"{{currencyCodeid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCode', res.currencyCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCodeid', res.id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": {{currencyCodeid}},\r\n  \"isActive\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"      pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCode', res.currencyCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCodeid', res.id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currencyNumber\": {{currencyNumber}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid currency code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"      pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCode', res.currencyCode);\r",
											"\r",
											"var res = pm.response.json();\r",
											"pm.environment.set('currencyCodeid', res.id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"id\": {{currencyCodeid}},\r\n  \"isActive\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"operating-currencies"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "FX rate type",
			"item": [
				{
					"name": "1 fx rate type",
					"item": [
						{
							"name": "1 rate type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
											"postman.setEnvironmentVariable(\"ratedescription\",idi[0].description);\r",
											"postman.setEnvironmentVariable(\"rateid\",idi[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomLoremWords}}\"\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"rate-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "chenge description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n\t  \"id\" : {{rateid}},\r\n    \"code\": \"{{ratecode}}\",\r\n    \"description\": \"{{$randomLoremWords}}\",\r\n    \"isActive\": true\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"rate-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n\t  \"id\" : \"{{rateid}}\",\r\n    \"code\": \"{{ratecode}}\",\r\n    \"description\": \"{{$randomLoremWords}}\",\r\n    \"isActive\": false\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"rate-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "chenge data on the close rate type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
											"\r",
											"pm.test(\"new data is not insert\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.description).to.not.eql(\"88\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n\t  \"id\" : \"{{rateid}}\",\r\n    \"code\": \"{{ratecode}}\",\r\n    \"description\": \"88\",\r\n    \"isActive\": false\r\n  }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"rate-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "get by id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types/{{rateid}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"rate-types",
										"{{rateid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"\tpm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var idi = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
									"postman.setEnvironmentVariable(\"ratedescription\",idi[0].description);\r",
									"postman.setEnvironmentVariable(\"rateid\",idi[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomWords}}\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "bulk",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"\tpm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomLoremWords}}\"\r\n  },\r\n  {\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomLoremWords}}\"\r\n  },\r\n  {\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomLoremWords}}\"\r\n  }\r\n  \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"\tpm.expect(pm.response.text()).to.include(pm.environment.get(\"ratecode\"));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "change description",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var idi = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n\t  \"id\": {{rateid}},\r\n    \"code\": \"{{ratecode}}\",\r\n    \"description\": \"{{$randomWord}}\",\r\n    \"isActive\": true\r\n     }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "is active false",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var idi = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"ratecode\",idi[0].code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n\t  \"id\": {{rateid}},\r\n    \"code\": \"{{ratecode}}\",\r\n    \"description\": \"{{$randomLoremWords}}\",\r\n    \"isActive\": false\r\n     }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "get by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types/{{rateid}}",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types",
								"{{rateid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "cheng edata afther close",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n\t  \"id\": {{rateid}},\r\n    \"code\": \"{{ratecode}}\",\r\n    \"description\": \"oottttg\",\r\n    \"isActive\": false\r\n     }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "without id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"message is true \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].message).to.eql(\"'Id' must not be empty.\");\r",
									"});\r",
									"\r",
									"pm.test(\"messagekey is true \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"NotNullValidator\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomWords}}\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n\t  \"id\" : 200,\r\n    \"code\": \"{{$randomWord}}\",\r\n    \"description\": \"{{$randomWords}}\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid rate code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"state error for invalid code \", function () {\r",
									"\tpm.expect(pm.response.text()).to.include(\"Unexpected character encountered while parsing value\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\": aaa,\r\n    \"description\": \"{{$randomLoremWords}}\",\r\n    \"isActive\": true\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "empty rate code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"error message \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].message).to.eql(\"'Code' must not be empty.\");\r",
									"});\r",
									"\r",
									"pm.test(\"error messageKey \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"NotEmptyValidator\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\":\"\",\r\n    \"description\": \"{{$randomLoremWords}}\",\r\n    \"isActive\": true\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "null for rate type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"error message\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].message).to.eql(\"'Code' must not be empty.\");\r",
									"});\r",
									"\r",
									"pm.test(\"error message key\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"NotNullValidator\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n   \r\n    \"description\": \"{{$randomLoremWords}}\",\r\n    \"isActive\": true\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "empty description",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"error message \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].message).to.eql(\"'Description' must not be empty.\");\r",
									"});\r",
									"\r",
									"pm.test(\"error message Key \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"NotEmptyValidator\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\":\"{{$randomWord}}\",\r\n    \"description\": \"\",\r\n    \"isActive\": true\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "null for description",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"error  message \", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].message).to.eql(\"'Description' must not be empty.\");\r",
									"});\r",
									"\r",
									"pm.test(\"error  message key\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"NotNullValidator\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"code\":\"{{$randomWord}}\",\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/rate-types",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"rate-types"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authority",
								"value": "dev-core.highwaybaas.com"
							},
							{
								"key": "sec-ch-ua",
								"value": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"99\", \"Google Chrome\";v=\"99\""
							},
							{
								"key": "clientsecret",
								"value": "c2VjcmV0"
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "authorization",
								"value": "null null"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "origin",
								"value": "https://dev-atom.highwaybaas.com"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-site"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "referer",
								"value": "https://dev-atom.highwaybaas.com/"
							},
							{
								"key": "accept-language",
								"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,hy;q=0.6"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"userName\":\"hello88@gmail.com\",\"password\":\"H12345678#h\",\"clientId\":\"test_client\"}"
						},
						"url": {
							"raw": "https://dev-core.highwaybaas.com/access-control-api/v1/tokens",
							"protocol": "https",
							"host": [
								"dev-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"access-control-api",
								"v1",
								"tokens"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "not actual",
			"item": [
				{
					"name": "false for is active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"\tpm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
									"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
									"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
									"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
								"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"user\", \r\n   \"isActive\":false,\r\n   \"reasonId\" : 2,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid cuurency number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"currencyNumber\":\"01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/operating-currencies",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"operating-currencies"
							]
						}
					},
					"response": []
				},
				{
					"name": "taxpayer id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.taxpayerid).to.not.eql(\"111255555251\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
								"description": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ5MzQsImV4cCI6MTY0Nzc3NjkzNCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0OTM0LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.M_AO8YgQb5HfxM9OT3C5UNSj0c-0j_XWNKaIWsSOyEvGnUn5DXF_Lds_EtIZvGdCL131vWiQ3HkUh63Nv3JQvzcE3sHIT0C2qxJSo_YJzw-YcEmpUcHTl8rLywxAPIj-uDJDc0c12oTtmyN1BhAVrumt2_q8EbItvKFejQSCrSGswgzmlVJFXh96ZFGYgYrG4YmQX2lBC6TlXzg0digfRummloUc5DReeftxXWOnTugsvSa73vYk6h5TrAHJaRpTSZGbMPu0F3WH-s8qfIa9PS0mSzW-Wn0Yi3sM_YD6khM91-0eMIhZ_XVO4pPUfWg22qUHB4PJOtvtwnGPcGR80g",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{clientid}},\r\n    \"internalid\": \"{{internalid}}\",\r\n   \"taxpayerid\": \"111255555251\",\r\n    \"firstName\": \"{{$randomFileName}}\",\r\n    \"middleName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"fullName\": \"{{$randomFullName}}\",\r\n    \"clientTypeId\": 1,\r\n    \"genderId\": 2,\r\n    \"clientStageId\": 1,\r\n    \"clientLanguageId\": 1,\r\n    \"birthIncorpDate\": \"{{bday}}\",\r\n    \"categoryId\": 1,\r\n    \"maritalStatusId\": 2,\r\n    \"nationalityId\": 1,\r\n    \"residentCountryId\": 1,\r\n    \"branchId\": 1,\r\n    \"createdByUserId\": \"{{createdByUserId}}\",\r\n    \"modifiedByUser\":\"{{$randomFirstName}}\",\r\n    \"openDate\": \"{{openDate}}\",\r\n    \"isActive\": true,\r\n    \"isResident\": true,\r\n    \"isInternational\": false,\r\n    \"isEmployee\": true,\r\n    \"isRelated\": false,\r\n    \"isGovernmental\": false,\r\n    \"clientAddresses\": [],\r\n    \"clientDocuments\": [],\r\n    \"clientEmails\": [],\r\n    \"clientPhones\": [],\r\n    \"clientSphereOfActivities\": [],\r\n    \"clientAttributes\": [],\r\n    \"clientDocumentAdditionals\": [],\r\n    \"clientRelations\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid created by user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"\tpm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"day\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]));\r",
									"pm.environment.set(\"mon\", _.sample([1,2,3,4,5,6,7,8,9,10,11,12]));\r",
									"pm.environment.set(\"1\", _.sample([1,2,3,4,5,6,7,8,9]));\r",
									"pm.environment.set(\"2\", _.sample([1,2,3,4,5,6,7,8,9]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1NgBearer",
								"description": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDUxODQ1OTksImV4cCI6MTY0Nzc3NjU5OSwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ1MTg0NTk5LCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.DrZlxOKFuem4iqvT1XWGw4tjstkxzg4ccLgcMiQsB7AmfvyyYSa__vY2QTRO7k3w98o-dxl9s4PpXeZ30O56DK3MXekRSBT8ZaHH6T6X5gf-5sA9EKyhBESo9DfpCUsa2grxdJvwBgYF2YHxJHQLH-06VVYkdxVzJf56LAnYjSw9aYI83KccOADne_-ov4FG8_PZ2a-pxDu-NQFxYms7oU6OoiP2ElyRtnw1mKfOMnKT0s_Urn7eP4kDC6eUVg_MB3c92yqaoxfdKNoQV2rHLDWg50lGwMauqVseSUG4TykmWzHP853FMXC7SOPZ6CUOC-zKPl27FeQfBx7coPh1Ng",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"taxpayerid\":\"12{{$randomBankAccount}}\",\r\n   \"firstName\":\"{{$randomFirstName}}\",\r\n   \"middleName\": \"{{$randomFirstName}}\",\r\n  \"lastName\":\"{{$randomLastName}}\",\r\n   \"fullName\":\"\",\r\n  \"clientTypeId\":1,\r\n  \"genderId\":2,\r\n  \"clientStageId\":1,\r\n  \"clientLanguageId\":1,\r\n  \"birthIncorpDate\":\"19{{1}}{{2}}-{{mon}}-{{day}}\",\r\n  \"categoryId\":1,\r\n  \"maritalStatusId\":2,\r\n  \"nationalityId\":1,\r\n   \"residentCountryId\":1,\r\n  \"branchId\":1,\r\n  \"createdByUserId\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", \r\n   \"isActive\":true,\r\n   \"reasonId\" : null,\r\n   \"note\" : null, \r\n   \"isResident\":true,\r\n   \"isInternational\":false,\r\n   \"isEmployee\":true,\r\n   \"isRelated\":false,\r\n   \"isGovernmental\":false\r\n    \r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/clients",
							"protocol": "https",
							"host": [
								"test-core",
								"highwaybaas",
								"com"
							],
							"path": [
								"core-clients-api",
								"v1",
								"clients"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reasons",
			"item": [
				{
					"name": "1 entity",
					"item": [
						{
							"name": "1 reason entity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"reasonId\",idi.id);\r",
											"postman.setEnvironmentVariable(\"reasonname\",idi.reason);\r",
											"postman.setEnvironmentVariable(\"mappingId\",idi.entityReasonCodeMappings[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomFirstName}}\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\":{{mapping}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "reasons",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.reason).to.eql(pm.environment.get(\"reasonname\"));\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[0].id).to.eql(parseInt(pm.environment.get(\"mappingId\")));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/{{reasonId}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"{{reasonId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update reason name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"reason name is test\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.reason).to.eql(\"TEST9\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"test9\",\r\n\t\"isActive\": true,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\t{\r\n    \r\n      \"id\": {{mappingId}}\r\n\r\n\r\n\t\r\n\r\n    }\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"empty entity\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings).to.eql(null);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"reasonname\",idi.reason);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"{{$randomWord}}\",\r\n\t\"isActive\": true,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "without entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.reason).to.eql(pm.environment.get(\"reasonname\"));\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings).to.be.an('array').that.is.empty;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/{{reasonId}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"{{reasonId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"33\",\r\n\t\"isActive\": false,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "update with invalid/inactive  reason id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"error message \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].message).to.eql(\"Record with provided id does not exist or is inactive\");\r",
											"});\r",
											"\r",
											"pm.test(\"messageKey is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"NO_DATA_FOUND\");\r",
											"});\r",
											"\r",
											"pm.test(\"hint is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].hint).to.eql( \"Please provide valid id\");\r",
											"});\r",
											"\r",
											"pm.test(\"entity\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].entity).to.eql(\"public.entity_reason_code\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"yujhtbgfd\",\r\n\t\"isActive\": false,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "is active false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\tpm.test(\"Your test name\", function () {\r",
											"\t\tvar jsonData = pm.response.json();\r",
											"\t\tpm.expect(jsonData.reason).to.eql(\"33\");\r",
											"\t});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings).to.be.an('array').that.is.empty;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/{{reasonId}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"{{reasonId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid reason entity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"state error\", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomWords}}\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\": 522\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty reason entity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomWords}}\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "without entity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"error message \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].message).to.eql(\"At least one entity within a Schema should be specified\");\r",
											"});\r",
											"\r",
											"pm.test(\"error message Key \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"REASON_ENTITY_LIST_ID_REQUIRED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomWords}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty reason name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"error message \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].message).to.eql(\"Reason name is a required field\");\r",
											"});\r",
											"\r",
											"pm.test(\"error message key\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.errors[0].messageKey).to.eql(\"REASON_NAME_REQUIRED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\": {{mapping}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "without reason name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\": {{mapping}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "bulk reason entites",
					"item": [
						{
							"name": "bulk insert with valid datas",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"1\", _.sample([2,3,4]));\r",
											"pm.environment.set(\"2\", _.sample([5,6,7,8]));\r",
											"pm.environment.set(\"3\", _.sample([9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"\tpm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var idi = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"reasonId\",idi.id);\r",
											"postman.setEnvironmentVariable(\"reasonname\",idi.reason);\r",
											"postman.setEnvironmentVariable(\"mappingId1\",idi.entityReasonCodeMappings[0].id);\r",
											"postman.setEnvironmentVariable(\"mappingId2\",idi.entityReasonCodeMappings[1].id);\r",
											"postman.setEnvironmentVariable(\"mappingId3\",idi.entityReasonCodeMappings[2].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomWords}}\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n          \"reasonEntityListId\": {{1}}\r\n    },\r\n    {\r\n          \"reasonEntityListId\": {{2}}\r\n    },\r\n    {\r\n          \"reasonEntityListId\": {{3}}\r\n    } \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.reason).to.eql(pm.environment.get(\"reasonname\"));\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"mapping id 1 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[0].id).to.eql(parseInt(pm.environment.get(\"mappingId1\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Ymapping id 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[1].id).to.eql(parseInt(pm.environment.get(\"mappingId2\")));\r",
											"});\r",
											"pm.test(\"mapping id 3\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[2].id).to.eql(parseInt(pm.environment.get(\"mappingId3\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/{{reasonId}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"{{reasonId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"mapping id 1 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[0].id).to.eql(parseInt(pm.environment.get(\"mappingId1\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Ymapping id 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[1].id).to.eql(parseInt(pm.environment.get(\"mappingId2\")));\r",
											"});\r",
											"pm.test(\"mapping id 3\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[2].id).to.eql(parseInt(pm.environment.get(\"mappingId3\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"{{$randomWord}}\",\r\n\t\"isActive\": true,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\t{\r\n          \"id\": {{mappingId1}}\r\n    },\r\n    {\r\n          \"id\": {{mappingId2}}\r\n    },{\r\n          \"id\": {{mappingId3}}\r\n    }\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "add new entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"mapping id 1 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[0].id).to.eql(parseInt(pm.environment.get(\"mappingId1\")));\r",
											"});\r",
											"\r",
											"pm.test(\"mapping id 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[1].id).to.eql(parseInt(pm.environment.get(\"mappingId2\")));\r",
											"});\r",
											"pm.test(\"mapping id 3\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[2].id).to.eql(parseInt(pm.environment.get(\"mappingId3\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"{{$randomWord}}\",\r\n\t\"isActive\": true,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\t{\r\n          \"id\": {{mappingId1}}\r\n    },\r\n    {\r\n          \"id\": {{mappingId2}}\r\n    },{\r\n          \"id\": {{mappingId3}}\r\n    },\r\n     {\r\n          \"reasonEntityListId\": 11\r\n    }\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete 1 entity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"mapping id 1 \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[0].id).to.eql(parseInt(pm.environment.get(\"mappingId1\")));\r",
											"});\r",
											"\r",
											"pm.test(\"mapping id 2\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[1].id).to.eql(parseInt(pm.environment.get(\"mappingId2\")));\r",
											"});\r",
											"pm.test(\"mapping id 3\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings[2].id).to.eql(parseInt(pm.environment.get(\"mappingId3\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"{{$randomWord}}\",\r\n\t\"isActive\": true,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\t{\r\n          \"id\": {{mappingId1}}\r\n    },\r\n    {\r\n          \"id\": {{mappingId2}}\r\n    },{\r\n          \"id\": {{mappingId3}}\r\n    }\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete all entites",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Yempty entity\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings).to.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"{{$randomWord}}\",\r\n\t\"isActive\": true,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\t\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "is active false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"reason id\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"is active \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"empty entity\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings).to.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": {{reasonId}},\r\n\t\"reason\": \"1\",\r\n\t\"isActive\": false,\r\n\t\"entityReasonCodeMappings\": [\r\n\t\t\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "is active false Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"reasonId\")));\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\tpm.test(\"Your test name\", function () {\r",
											"\t\tvar jsonData = pm.response.json();\r",
											"\t\tpm.expect(jsonData.reason).to.eql(\"1\");\r",
											"\t});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.isActive).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.entityReasonCodeMappings).to.be.an('array').that.is.empty;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/{{reasonId}}",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"{{reasonId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk insert with invalid datas",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"\tpm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"insert or update on table\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomWords}}\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\": 2\r\n    },\r\n    {\r\n    \r\n      \"reasonEntityListId\": 200\r\n    },\r\n    {\r\n    \r\n      \"reasonEntityListId\": 2\r\n    } \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk insert with empty datas",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10,11]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"\tpm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"state error \", function () {\r",
											"\tpm.expect(pm.response.text()).to.include(\"Error converting value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reason\": \"{{$randomWords}}\",\r\n  \"entityReasonCodeMappings\": [\r\n    {\r\n    \r\n      \"reasonEntityListId\": \"\"\r\n    },\r\n    {\r\n    \r\n      \"reasonEntityListId\": \"\"\r\n    },\r\n    {\r\n    \r\n      \"reasonEntityListId\": \"\"\r\n    } \r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get",
					"item": [
						{
							"name": "/reasons/schemas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"first id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].id).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"first schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].schemaName).to.eql(\"client\");\r",
											"});\r",
											"\r",
											"pm.test(\"second id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].id).to.eql(11);\r",
											"});\r",
											"\r",
											"pm.test(\"secind schema is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].schemaName).to.eql(\"account\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/schemas",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"schemas"
									]
								}
							},
							"response": []
						},
						{
							"name": "/reasons/schemas/client",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"first id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].id).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"first schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].tableName).to.eql(\"client\");\r",
											"});\r",
											"\r",
											"pm.test(\"3 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].id).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"client address schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[1].tableName).to.eql(\"client address\");\r",
											"});\r",
											"\r",
											"pm.test(\"4 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[2].id).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"client document schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[2].tableName).to.eql(\"client document\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"5 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[3].id).to.eql(5);\r",
											"});\r",
											"\r",
											"pm.test(\"client document additional schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[3].tableName).to.eql(\"client document additional\");\r",
											"});\r",
											"\r",
											"pm.test(\"6 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[4].id).to.eql(6);\r",
											"});\r",
											"\r",
											"pm.test(\"client email schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[4].tableName).to.eql(\"client email\");\r",
											"});\r",
											"\r",
											"pm.test(\"7 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[5].id).to.eql(7);\r",
											"});\r",
											"\r",
											"pm.test(\"client phone schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[5].tableName).to.eql(\"client phone\");\r",
											"});\r",
											"\r",
											"pm.test(\"8 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[6].id).to.eql(8);\r",
											"});\r",
											"\r",
											"pm.test(\"client relation schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[6].tableName).to.eql(\"client relation\");\r",
											"});\r",
											"\r",
											"pm.test(\"9 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[7].id).to.eql(9);\r",
											"});\r",
											"\r",
											"pm.test(\"client sphere of activity schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[7].tableName).to.eql(\"client sphere of activity\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"10 id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[8].id).to.eql(10);\r",
											"});\r",
											"\r",
											"pm.test(\"client attribute schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[8].tableName).to.eql(\"client attribute\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/schemas/{{mapping}}/tables",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"schemas",
										"{{mapping}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "/reasons/schemas/11",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"mapping\", _.sample([2,3,4,5,6,7,8,9,10]));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"first id is true \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].id).to.eql(11);\r",
											"});\r",
											"\r",
											"pm.test(\"first schema name \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData[0].tableName).to.eql(\"account\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/schemas/11/tables",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"schemas",
										"11",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "/reasons",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid reason id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"\tpm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"invalid reason \", function () {\r",
											"\tvar jsonData = pm.response.json();\r",
											"\tpm.expect(jsonData.message).to.eql(\"reason with Id 400 not exists\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Authorization}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://test-core.highwaybaas.com/core-clients-api/v1/reasons/400",
									"protocol": "https",
									"host": [
										"test-core",
										"highwaybaas",
										"com"
									],
									"path": [
										"core-clients-api",
										"v1",
										"reasons",
										"400"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IkYxQzFBRDAwOTQ2Rjg4NEU4MDMyNUQ0OEFDQTRDNTJEIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDcyNTcxMDAsImV4cCI6MTY0OTg0OTEwMCwiaXNzIjoiaHR0cDovL2FjY2NvcmUiLCJhdWQiOiJjb3JlX2NsaWVudHNfYXBpIiwiY2xpZW50X2lkIjoiY29yZV9jbGllbnQiLCJpYXQiOjE2NDcyNTcxMDAsInNjb3BlIjpbImNvcmVfYmFua2luZyJdfQ.Ru0zzQ37NwDyAkldfSjACWDhVPXroI7VTkQTuHqBhD4CNuYZXqDGI6vrwNzCkBdr4lWvWWDv15h4hAAJywbEvMZletEitLacftBRjWAnDAhZEd-dxLouUEgfQGUo01CWZFnnxz2dB_PKTUlyxlfdUXQD2UstZ5PzzwZ-q74I__G7EuXgKEjjYyce_0aILVVITFWkz75qF3xVrOciUZFLrKYs_v-NbZmihVq7skP9Uo6j4CwNNkc849CX2EBsnUjHcjWh29ubarlgr7boDWjM29pqUbW-r3LCfxPQD8zRXCRkzPlqz29kayWVeWrqzZnoGgMxmhhXtbzLdX0-t2gAwQ",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Authorization",
			"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjJENkRGOEIxNDlBNjQ3QkNFOUUwQzc5N0RBQzNBMzU2IiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2NDYwNjEzMjAsImV4cCI6MTY0ODY1MzMyMCwiaXNzIjoiaHR0cDovL3Vzcm1uZ210IiwiYXVkIjoiY29yZV9jbGllbnRzX2FwaSIsImNsaWVudF9pZCI6ImNvcmVfY2xpZW50IiwiaWF0IjoxNjQ2MDYxMzIwLCJzY29wZSI6WyJjb3JlX2JhbmtpbmciXX0.gtTHKD171bxuWq0O_ut3Ebr3Hf7CTo-gnmskG72vov15X3Tn_qIJpT_92QBgp0RRaOT1mZqhK5dX8DjY-CZV_OVNb7YFTPZaHh5twsiXS_lG46rmv6I9YiwXOzXmLaAwwHGHCu8vYepmjeiOTx4c5-R_dNoj_t2g6fqieAHCsrgtTKITgpRYBNWE9lIu3-HvDq0FSt_uUTs-RH7exo2wtW3d4C1fe_n-7L8mF9L0wBf2GL3zC6PZmSO8peTQBkhdILbt6YiX0ptRuAhlgxQwg4c1A8Yt_XZz16Y7o1QReku0MmxFSHVvy1d9XsAzUDku09a72eLjivt0c2RrpQB1zg",
			"type": "string"
		},
		{
			"key": "clientid",
			"value": "929",
			"type": "string"
		},
		{
			"key": "internalid",
			"value": "18151520",
			"type": "string"
		},
		{
			"key": "taxpayerid",
			"value": "1255076222",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "Vada",
			"type": "string"
		},
		{
			"key": "middleName",
			"value": "Leora",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "Parker",
			"type": "string"
		},
		{
			"key": "fullName",
			"value": "Vada Leora Parker",
			"type": "string"
		},
		{
			"key": "bday",
			"value": "1950-10-10T00:00:00",
			"type": "string"
		},
		{
			"key": "createdByUserId",
			"value": "user",
			"type": "string"
		},
		{
			"key": "createdDate",
			"value": "",
			"type": "string"
		},
		{
			"key": "address",
			"value": "",
			"type": "string"
		},
		{
			"key": "addressid",
			"value": "",
			"type": "string"
		},
		{
			"key": "addresscreateday",
			"value": "",
			"type": "string"
		},
		{
			"key": "addresscreate",
			"value": "",
			"type": "string"
		},
		{
			"key": "addressmodify",
			"value": "",
			"type": "string"
		},
		{
			"key": "Docid",
			"value": "",
			"type": "string"
		},
		{
			"key": "documentTypeId",
			"value": "",
			"type": "string"
		},
		{
			"key": "documentid",
			"value": "",
			"type": "string"
		},
		{
			"key": "docissuingAuthority",
			"value": "",
			"type": "string"
		},
		{
			"key": "docissuedDate",
			"value": "",
			"type": "string"
		},
		{
			"key": "docexpiredDate",
			"value": "",
			"type": "string"
		},
		{
			"key": "docsourceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "docissuedCountryId",
			"value": "",
			"type": "string"
		},
		{
			"key": "emailid",
			"value": "89",
			"type": "any"
		},
		{
			"key": "emailtypeId",
			"value": "",
			"type": "string"
		},
		{
			"key": "emailcreatedDate",
			"value": "",
			"type": "string"
		}
	]
}